/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

/*
 * Copyright (C) 2019 Clover Network, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.clover.sdk.v3.pay;

import com.clover.sdk.GenericClient;
import com.clover.sdk.GenericParcelable;

/**
 * This is an auto-generated Clover data object.
 * <p>
 * <h3>Fields</h3>
 * <ul>
 * <li>{@link #getTxResult txResult}</li>
 * <li>{@link #getTxError txError}</li>
 * <li>{@link #getAmount amount}</li>
 * <li>{@link #getTipAmount tipAmount}</li>
 * <li>{@link #getCashBackAmount cashBackAmount}</li>
 * <li>{@link #getErrorCode errorCode}</li>
 * <li>{@link #getErrorText errorText}</li>
 * <li>{@link #getTransactionDate transactionDate}</li>
 * <li>{@link #getTransactionTime transactionTime}</li>
 * <li>{@link #getMsrContainer msrContainer}</li>
 * <li>{@link #getMsrMaskedTrack1 msrMaskedTrack1}</li>
 * <li>{@link #getMsrMaskedTrack2 msrMaskedTrack2}</li>
 * <li>{@link #getMaskedManualPan maskedManualPan}</li>
 * <li>{@link #getSredContainer sredContainer}</li>
 * <li>{@link #getSred sred}</li>
 * <li>{@link #getKsn ksn}</li>
 * <li>{@link #getTransArmorContainer transArmorContainer}</li>
 * <li>{@link #getTransArmorKey transArmorKey}</li>
 * <li>{@link #getTransArmorKeyId transArmorKeyId}</li>
 * <li>{@link #getTransArmorEncryptedTrack1 transArmorEncryptedTrack1}</li>
 * <li>{@link #getTransArmorEncryptedTrack2 transArmorEncryptedTrack2}</li>
 * <li>{@link #getTransArmorEncryptedEmvTag57 transArmorEncryptedEmvTag57}</li>
 * <li>{@link #getTransArmorEncryptedEmvTag5A transArmorEncryptedEmvTag5A}</li>
 * <li>{@link #getTransArmorEncryptedManualKeyedData transArmorEncryptedManualKeyedData}</li>
 * <li>{@link #getIccContainer iccContainer}</li>
 * <li>{@link #getIccApplicationInterchangeProfile iccApplicationInterchangeProfile}</li>
 * <li>{@link #getIccMaskedEmv57 iccMaskedEmv57}</li>
 * <li>{@link #getIccMaskedEmv5A iccMaskedEmv5A}</li>
 * <li>{@link #getIccApplicationPanSequenceNumber iccApplicationPanSequenceNumber}</li>
 * <li>{@link #getIccApplicationExpirationDate iccApplicationExpirationDate}</li>
 * <li>{@link #getIccApplicationEffectiveDate iccApplicationEffectiveDate}</li>
 * <li>{@link #getIccAmountAuthorized iccAmountAuthorized}</li>
 * <li>{@link #getIccAmountOther iccAmountOther}</li>
 * <li>{@link #getIccTransactionCurrencyCode iccTransactionCurrencyCode}</li>
 * <li>{@link #getIccTransactionCurrencyExponent iccTransactionCurrencyExponent}</li>
 * <li>{@link #getIccApplicationUsageControl iccApplicationUsageControl}</li>
 * <li>{@link #getIccIssuerActionCodeDefault iccIssuerActionCodeDefault}</li>
 * <li>{@link #getIccIssuerActionCodeDenial iccIssuerActionCodeDenial}</li>
 * <li>{@link #getIccIssuerActionCodeOnline iccIssuerActionCodeOnline}</li>
 * <li>{@link #getIccApplicationLabel iccApplicationLabel}</li>
 * <li>{@link #getIccApplicationCryptogram iccApplicationCryptogram}</li>
 * <li>{@link #getIccApplicationIdentifierCard iccApplicationIdentifierCard}</li>
 * <li>{@link #getIccApplicationIdentifierTerminal iccApplicationIdentifierTerminal}</li>
 * <li>{@link #getIccApplicationTransactionCounter iccApplicationTransactionCounter}</li>
 * <li>{@link #getIccApplicationVersionNumber iccApplicationVersionNumber}</li>
 * <li>{@link #getIccCryptogramInformationData iccCryptogramInformationData}</li>
 * <li>{@link #getIccCvmResults iccCvmResults}</li>
 * <li>{@link #getIccInterfaceDeviceSerialNumber iccInterfaceDeviceSerialNumber}</li>
 * <li>{@link #getIccIssuerApplicationData iccIssuerApplicationData}</li>
 * <li>{@link #getIccPosEntryModeCode iccPosEntryModeCode}</li>
 * <li>{@link #getIccTerminalCapabilities iccTerminalCapabilities}</li>
 * <li>{@link #getIccTerminalCountryCode iccTerminalCountryCode}</li>
 * <li>{@link #getIccTerminalType iccTerminalType}</li>
 * <li>{@link #getIccTvr iccTvr}</li>
 * <li>{@link #getIccTransactionDate iccTransactionDate}</li>
 * <li>{@link #getIccTsi iccTsi}</li>
 * <li>{@link #getIccTransactionType iccTransactionType}</li>
 * <li>{@link #getIccUnpredictableNumber iccUnpredictableNumber}</li>
 * <li>{@link #getIccTransactionTime iccTransactionTime}</li>
 * <li>{@link #getIccAdditionalTerminalCapabilities iccAdditionalTerminalCapabilities}</li>
 * <li>{@link #getIccTransactionCategoryCode iccTransactionCategoryCode}</li>
 * <li>{@link #getIccIssuerApplicationPreferredName iccIssuerApplicationPreferredName}</li>
 * <li>{@link #getIccCardholderName iccCardholderName}</li>
 * <li>{@link #getIccIssuerCodeTableIndex iccIssuerCodeTableIndex}</li>
 * <li>{@link #getIccIssuerScripts iccIssuerScripts}</li>
 * <li>{@link #getIccIssuerScriptResults iccIssuerScriptResults}</li>
 * <li>{@link #getDebugTrack2EquivalentData debugTrack2EquivalentData}</li>
 * <li>{@link #getDebugApplicationPan debugApplicationPan}</li>
 * <li>{@link #getDebugAmountAuthorizedBinary debugAmountAuthorizedBinary}</li>
 * <li>{@link #getDebugAmountOtherBinary debugAmountOtherBinary}</li>
 * <li>{@link #getDebugTransactionStatusInformation debugTransactionStatusInformation}</li>
 * <li>{@link #getDebugPlainTrack1 debugPlainTrack1}</li>
 * <li>{@link #getDebugPlainTrack2 debugPlainTrack2}</li>
 * <li>{@link #getSchemePunATC schemePunATC}</li>
 * <li>{@link #getSchemeThirdPartyData schemeThirdPartyData}</li>
 * <li>{@link #getSchemeMerchantCustomData schemeMerchantCustomData}</li>
 * <li>{@link #getSchemeTerminalEntryCapability schemeTerminalEntryCapability}</li>
 * <li>{@link #getPinBlockContainer pinBlockContainer}</li>
 * <li>{@link #getPinBlock pinBlock}</li>
 * <li>{@link #getPinBlockKsn pinBlockKsn}</li>
 * <li>{@link #getMac mac}</li>
 * <li>{@link #getMacKsn macKsn}</li>
 * <li>{@link #getGwContainer gwContainer}</li>
 * <li>{@link #getGwIssuerAuthenticationData gwIssuerAuthenticationData}</li>
 * <li>{@link #getGwIssuerScriptTemplate1 gwIssuerScriptTemplate1}</li>
 * <li>{@link #getGwIssuerScriptTemplate2 gwIssuerScriptTemplate2}</li>
 * <li>{@link #getGwIssuerAuthorizationResponseCode gwIssuerAuthorizationResponseCode}</li>
 * <li>{@link #getGwMessageControlField gwMessageControlField}</li>
 * <li>{@link #getGwTxResult gwTxResult}</li>
 * <li>{@link #getCvmResult cvmResult}</li>
 * <li>{@link #getServiceCode1 serviceCode1}</li>
 * <li>{@link #getServiceCode2 serviceCode2}</li>
 * <li>{@link #getServiceCode3 serviceCode3}</li>
 * <li>{@link #getOfflineApprovalAuthCode offlineApprovalAuthCode}</li>
 * <li>{@link #getAvailableOfflineSpendingAmount availableOfflineSpendingAmount}</li>
 * </ul>
 */
@SuppressWarnings("all")
public class TransactionData extends GenericParcelable implements com.clover.sdk.v3.Validator, com.clover.sdk.JSONifiable {

  public com.clover.sdk.v3.pay.TxResult getTxResult() {
    return genClient.cacheGet(CacheKey.txResult);
  }

  public com.clover.sdk.v3.pay.ErrorCode getTxError() {
    return genClient.cacheGet(CacheKey.txError);
  }

  public java.lang.Double getAmount() {
    return genClient.cacheGet(CacheKey.amount);
  }

  public java.lang.Double getTipAmount() {
    return genClient.cacheGet(CacheKey.tipAmount);
  }

  public java.lang.Double getCashBackAmount() {
    return genClient.cacheGet(CacheKey.cashBackAmount);
  }

  public java.lang.String getErrorCode() {
    return genClient.cacheGet(CacheKey.errorCode);
  }

  public java.lang.String getErrorText() {
    return genClient.cacheGet(CacheKey.errorText);
  }

  public java.lang.String getTransactionDate() {
    return genClient.cacheGet(CacheKey.transactionDate);
  }

  public java.lang.String getTransactionTime() {
    return genClient.cacheGet(CacheKey.transactionTime);
  }

  public java.lang.String getMsrContainer() {
    return genClient.cacheGet(CacheKey.msrContainer);
  }

  public java.lang.String getMsrMaskedTrack1() {
    return genClient.cacheGet(CacheKey.msrMaskedTrack1);
  }

  public java.lang.String getMsrMaskedTrack2() {
    return genClient.cacheGet(CacheKey.msrMaskedTrack2);
  }

  public java.lang.String getMaskedManualPan() {
    return genClient.cacheGet(CacheKey.maskedManualPan);
  }

  public java.lang.String getSredContainer() {
    return genClient.cacheGet(CacheKey.sredContainer);
  }

  public java.lang.String getSred() {
    return genClient.cacheGet(CacheKey.sred);
  }

  public java.lang.String getKsn() {
    return genClient.cacheGet(CacheKey.ksn);
  }

  public java.lang.String getTransArmorContainer() {
    return genClient.cacheGet(CacheKey.transArmorContainer);
  }

  public java.lang.String getTransArmorKey() {
    return genClient.cacheGet(CacheKey.transArmorKey);
  }

  public java.lang.String getTransArmorKeyId() {
    return genClient.cacheGet(CacheKey.transArmorKeyId);
  }

  public java.lang.String getTransArmorEncryptedTrack1() {
    return genClient.cacheGet(CacheKey.transArmorEncryptedTrack1);
  }

  public java.lang.String getTransArmorEncryptedTrack2() {
    return genClient.cacheGet(CacheKey.transArmorEncryptedTrack2);
  }

  public java.lang.String getTransArmorEncryptedEmvTag57() {
    return genClient.cacheGet(CacheKey.transArmorEncryptedEmvTag57);
  }

  public java.lang.String getTransArmorEncryptedEmvTag5A() {
    return genClient.cacheGet(CacheKey.transArmorEncryptedEmvTag5A);
  }

  public java.lang.String getTransArmorEncryptedManualKeyedData() {
    return genClient.cacheGet(CacheKey.transArmorEncryptedManualKeyedData);
  }

  public java.lang.String getIccContainer() {
    return genClient.cacheGet(CacheKey.iccContainer);
  }

  public java.lang.String getIccApplicationInterchangeProfile() {
    return genClient.cacheGet(CacheKey.iccApplicationInterchangeProfile);
  }

  public java.lang.String getIccMaskedEmv57() {
    return genClient.cacheGet(CacheKey.iccMaskedEmv57);
  }

  public java.lang.String getIccMaskedEmv5A() {
    return genClient.cacheGet(CacheKey.iccMaskedEmv5A);
  }

  public java.lang.String getIccApplicationPanSequenceNumber() {
    return genClient.cacheGet(CacheKey.iccApplicationPanSequenceNumber);
  }

  public java.lang.String getIccApplicationExpirationDate() {
    return genClient.cacheGet(CacheKey.iccApplicationExpirationDate);
  }

  public java.lang.String getIccApplicationEffectiveDate() {
    return genClient.cacheGet(CacheKey.iccApplicationEffectiveDate);
  }

  public java.lang.String getIccAmountAuthorized() {
    return genClient.cacheGet(CacheKey.iccAmountAuthorized);
  }

  public java.lang.String getIccAmountOther() {
    return genClient.cacheGet(CacheKey.iccAmountOther);
  }

  public java.lang.String getIccTransactionCurrencyCode() {
    return genClient.cacheGet(CacheKey.iccTransactionCurrencyCode);
  }

  public java.lang.String getIccTransactionCurrencyExponent() {
    return genClient.cacheGet(CacheKey.iccTransactionCurrencyExponent);
  }

  public java.lang.String getIccApplicationUsageControl() {
    return genClient.cacheGet(CacheKey.iccApplicationUsageControl);
  }

  public java.lang.String getIccIssuerActionCodeDefault() {
    return genClient.cacheGet(CacheKey.iccIssuerActionCodeDefault);
  }

  public java.lang.String getIccIssuerActionCodeDenial() {
    return genClient.cacheGet(CacheKey.iccIssuerActionCodeDenial);
  }

  public java.lang.String getIccIssuerActionCodeOnline() {
    return genClient.cacheGet(CacheKey.iccIssuerActionCodeOnline);
  }

  public java.lang.String getIccApplicationLabel() {
    return genClient.cacheGet(CacheKey.iccApplicationLabel);
  }

  public java.lang.String getIccApplicationCryptogram() {
    return genClient.cacheGet(CacheKey.iccApplicationCryptogram);
  }

  public java.lang.String getIccApplicationIdentifierCard() {
    return genClient.cacheGet(CacheKey.iccApplicationIdentifierCard);
  }

  public java.lang.String getIccApplicationIdentifierTerminal() {
    return genClient.cacheGet(CacheKey.iccApplicationIdentifierTerminal);
  }

  public java.lang.String getIccApplicationTransactionCounter() {
    return genClient.cacheGet(CacheKey.iccApplicationTransactionCounter);
  }

  public java.lang.String getIccApplicationVersionNumber() {
    return genClient.cacheGet(CacheKey.iccApplicationVersionNumber);
  }

  public java.lang.String getIccCryptogramInformationData() {
    return genClient.cacheGet(CacheKey.iccCryptogramInformationData);
  }

  public java.lang.String getIccCvmResults() {
    return genClient.cacheGet(CacheKey.iccCvmResults);
  }

  public java.lang.String getIccInterfaceDeviceSerialNumber() {
    return genClient.cacheGet(CacheKey.iccInterfaceDeviceSerialNumber);
  }

  public java.lang.String getIccIssuerApplicationData() {
    return genClient.cacheGet(CacheKey.iccIssuerApplicationData);
  }

  public java.lang.String getIccPosEntryModeCode() {
    return genClient.cacheGet(CacheKey.iccPosEntryModeCode);
  }

  public java.lang.String getIccTerminalCapabilities() {
    return genClient.cacheGet(CacheKey.iccTerminalCapabilities);
  }

  public java.lang.String getIccTerminalCountryCode() {
    return genClient.cacheGet(CacheKey.iccTerminalCountryCode);
  }

  public java.lang.String getIccTerminalType() {
    return genClient.cacheGet(CacheKey.iccTerminalType);
  }

  public java.lang.String getIccTvr() {
    return genClient.cacheGet(CacheKey.iccTvr);
  }

  public java.lang.String getIccTransactionDate() {
    return genClient.cacheGet(CacheKey.iccTransactionDate);
  }

  public java.lang.String getIccTsi() {
    return genClient.cacheGet(CacheKey.iccTsi);
  }

  public java.lang.String getIccTransactionType() {
    return genClient.cacheGet(CacheKey.iccTransactionType);
  }

  public java.lang.String getIccUnpredictableNumber() {
    return genClient.cacheGet(CacheKey.iccUnpredictableNumber);
  }

  public java.lang.String getIccTransactionTime() {
    return genClient.cacheGet(CacheKey.iccTransactionTime);
  }

  public java.lang.String getIccAdditionalTerminalCapabilities() {
    return genClient.cacheGet(CacheKey.iccAdditionalTerminalCapabilities);
  }

  public java.lang.String getIccTransactionCategoryCode() {
    return genClient.cacheGet(CacheKey.iccTransactionCategoryCode);
  }

  public java.lang.String getIccIssuerApplicationPreferredName() {
    return genClient.cacheGet(CacheKey.iccIssuerApplicationPreferredName);
  }

  public java.lang.String getIccCardholderName() {
    return genClient.cacheGet(CacheKey.iccCardholderName);
  }

  public java.lang.String getIccIssuerCodeTableIndex() {
    return genClient.cacheGet(CacheKey.iccIssuerCodeTableIndex);
  }

  public java.lang.String getIccIssuerScripts() {
    return genClient.cacheGet(CacheKey.iccIssuerScripts);
  }

  public java.lang.String getIccIssuerScriptResults() {
    return genClient.cacheGet(CacheKey.iccIssuerScriptResults);
  }

  public java.lang.String getDebugTrack2EquivalentData() {
    return genClient.cacheGet(CacheKey.debugTrack2EquivalentData);
  }

  public java.lang.String getDebugApplicationPan() {
    return genClient.cacheGet(CacheKey.debugApplicationPan);
  }

  public java.lang.String getDebugAmountAuthorizedBinary() {
    return genClient.cacheGet(CacheKey.debugAmountAuthorizedBinary);
  }

  public java.lang.String getDebugAmountOtherBinary() {
    return genClient.cacheGet(CacheKey.debugAmountOtherBinary);
  }

  public java.lang.String getDebugTransactionStatusInformation() {
    return genClient.cacheGet(CacheKey.debugTransactionStatusInformation);
  }

  public java.lang.String getDebugPlainTrack1() {
    return genClient.cacheGet(CacheKey.debugPlainTrack1);
  }

  public java.lang.String getDebugPlainTrack2() {
    return genClient.cacheGet(CacheKey.debugPlainTrack2);
  }

  public java.lang.String getSchemePunATC() {
    return genClient.cacheGet(CacheKey.schemePunATC);
  }

  public java.lang.String getSchemeThirdPartyData() {
    return genClient.cacheGet(CacheKey.schemeThirdPartyData);
  }

  public java.lang.String getSchemeMerchantCustomData() {
    return genClient.cacheGet(CacheKey.schemeMerchantCustomData);
  }

  public java.lang.String getSchemeTerminalEntryCapability() {
    return genClient.cacheGet(CacheKey.schemeTerminalEntryCapability);
  }

  public java.lang.String getPinBlockContainer() {
    return genClient.cacheGet(CacheKey.pinBlockContainer);
  }

  public java.lang.String getPinBlock() {
    return genClient.cacheGet(CacheKey.pinBlock);
  }

  public java.lang.String getPinBlockKsn() {
    return genClient.cacheGet(CacheKey.pinBlockKsn);
  }

  public java.lang.String getMac() {
    return genClient.cacheGet(CacheKey.mac);
  }

  public java.lang.String getMacKsn() {
    return genClient.cacheGet(CacheKey.macKsn);
  }

  public java.lang.String getGwContainer() {
    return genClient.cacheGet(CacheKey.gwContainer);
  }

  public java.lang.String getGwIssuerAuthenticationData() {
    return genClient.cacheGet(CacheKey.gwIssuerAuthenticationData);
  }

  public java.lang.String getGwIssuerScriptTemplate1() {
    return genClient.cacheGet(CacheKey.gwIssuerScriptTemplate1);
  }

  public java.lang.String getGwIssuerScriptTemplate2() {
    return genClient.cacheGet(CacheKey.gwIssuerScriptTemplate2);
  }

  public java.lang.String getGwIssuerAuthorizationResponseCode() {
    return genClient.cacheGet(CacheKey.gwIssuerAuthorizationResponseCode);
  }

  public java.lang.String getGwMessageControlField() {
    return genClient.cacheGet(CacheKey.gwMessageControlField);
  }

  public com.clover.sdk.v3.pay.GwTxResult getGwTxResult() {
    return genClient.cacheGet(CacheKey.gwTxResult);
  }

  public com.clover.sdk.v3.payments.CvmResult getCvmResult() {
    return genClient.cacheGet(CacheKey.cvmResult);
  }

  public com.clover.sdk.v3.pay.ServiceCode1 getServiceCode1() {
    return genClient.cacheGet(CacheKey.serviceCode1);
  }

  public com.clover.sdk.v3.pay.ServiceCode2 getServiceCode2() {
    return genClient.cacheGet(CacheKey.serviceCode2);
  }

  public com.clover.sdk.v3.pay.ServiceCode3 getServiceCode3() {
    return genClient.cacheGet(CacheKey.serviceCode3);
  }

  public java.lang.String getOfflineApprovalAuthCode() {
    return genClient.cacheGet(CacheKey.offlineApprovalAuthCode);
  }

  public java.lang.Double getAvailableOfflineSpendingAmount() {
    return genClient.cacheGet(CacheKey.availableOfflineSpendingAmount);
  }




  private enum CacheKey implements com.clover.sdk.ExtractionStrategyEnum {
    txResult
        (com.clover.sdk.extractors.EnumExtractionStrategy.instance(com.clover.sdk.v3.pay.TxResult.class)),
    txError
        (com.clover.sdk.extractors.EnumExtractionStrategy.instance(com.clover.sdk.v3.pay.ErrorCode.class)),
    amount
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Double.class)),
    tipAmount
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Double.class)),
    cashBackAmount
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Double.class)),
    errorCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    errorText
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transactionDate
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transactionTime
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    msrContainer
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    msrMaskedTrack1
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    msrMaskedTrack2
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    maskedManualPan
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sredContainer
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sred
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    ksn
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transArmorContainer
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transArmorKey
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transArmorKeyId
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transArmorEncryptedTrack1
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transArmorEncryptedTrack2
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transArmorEncryptedEmvTag57
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transArmorEncryptedEmvTag5A
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transArmorEncryptedManualKeyedData
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccContainer
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationInterchangeProfile
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccMaskedEmv57
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccMaskedEmv5A
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationPanSequenceNumber
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationExpirationDate
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationEffectiveDate
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccAmountAuthorized
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccAmountOther
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTransactionCurrencyCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTransactionCurrencyExponent
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationUsageControl
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccIssuerActionCodeDefault
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccIssuerActionCodeDenial
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccIssuerActionCodeOnline
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationLabel
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationCryptogram
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationIdentifierCard
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationIdentifierTerminal
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationTransactionCounter
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccApplicationVersionNumber
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccCryptogramInformationData
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccCvmResults
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccInterfaceDeviceSerialNumber
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccIssuerApplicationData
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccPosEntryModeCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTerminalCapabilities
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTerminalCountryCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTerminalType
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTvr
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTransactionDate
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTsi
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTransactionType
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccUnpredictableNumber
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTransactionTime
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccAdditionalTerminalCapabilities
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccTransactionCategoryCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccIssuerApplicationPreferredName
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccCardholderName
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccIssuerCodeTableIndex
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccIssuerScripts
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    iccIssuerScriptResults
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    debugTrack2EquivalentData
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    debugApplicationPan
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    debugAmountAuthorizedBinary
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    debugAmountOtherBinary
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    debugTransactionStatusInformation
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    debugPlainTrack1
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    debugPlainTrack2
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    schemePunATC
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    schemeThirdPartyData
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    schemeMerchantCustomData
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    schemeTerminalEntryCapability
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    pinBlockContainer
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    pinBlock
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    pinBlockKsn
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    mac
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    macKsn
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    gwContainer
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    gwIssuerAuthenticationData
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    gwIssuerScriptTemplate1
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    gwIssuerScriptTemplate2
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    gwIssuerAuthorizationResponseCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    gwMessageControlField
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    gwTxResult
        (com.clover.sdk.extractors.EnumExtractionStrategy.instance(com.clover.sdk.v3.pay.GwTxResult.class)),
    cvmResult
        (com.clover.sdk.extractors.EnumExtractionStrategy.instance(com.clover.sdk.v3.payments.CvmResult.class)),
    serviceCode1
        (com.clover.sdk.extractors.EnumExtractionStrategy.instance(com.clover.sdk.v3.pay.ServiceCode1.class)),
    serviceCode2
        (com.clover.sdk.extractors.EnumExtractionStrategy.instance(com.clover.sdk.v3.pay.ServiceCode2.class)),
    serviceCode3
        (com.clover.sdk.extractors.EnumExtractionStrategy.instance(com.clover.sdk.v3.pay.ServiceCode3.class)),
    offlineApprovalAuthCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    availableOfflineSpendingAmount
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Double.class)),
      ;

    private final com.clover.sdk.extractors.ExtractionStrategy extractionStrategy;

    private CacheKey(com.clover.sdk.extractors.ExtractionStrategy s) {
      extractionStrategy = s;
    }

    @Override
    public com.clover.sdk.extractors.ExtractionStrategy getExtractionStrategy() {
      return extractionStrategy;
    }
  }

  private final GenericClient<TransactionData> genClient;

  /**
   * Constructs a new empty instance.
   */
  public TransactionData() {
    genClient = new GenericClient<TransactionData>(this);
  }

  @Override
  protected GenericClient getGenericClient() {
    return genClient;
  }

  /**
   * Constructs a new empty instance.
   */
  protected TransactionData(boolean noInit) {
    genClient = null;
  }

  /**
   * Constructs a new instance from the given JSON String.
   */
  public TransactionData(String json) throws IllegalArgumentException {
    this();
    genClient.initJsonObject(json);
  }

  /**
   * Construct a new instance backed by the given JSONObject, the parameter is not copied so changes to it will be
   * reflected in this instance and vice-versa.
   */
  public TransactionData(org.json.JSONObject jsonObject) {
    this();
    genClient.setJsonObject(jsonObject);
  }

  /**
   * Constructs a new instance that is a deep copy of the source instance. It does not copy the bundle or changelog.
   */
  public TransactionData(TransactionData src) {
    this();
    if (src.genClient.getJsonObject() != null) {
      genClient.setJsonObject(com.clover.sdk.v3.JsonHelper.deepCopy(src.genClient.getJSONObject()));
    }
  }

  /**
   * Returns the internal JSONObject backing this instance, the return value is not a copy so changes to it will be
   * reflected in this instance and vice-versa.
   */
  public org.json.JSONObject getJSONObject() {
    return genClient.getJSONObject();
  }

  @Override
  public void validate() {
  }

  /** Checks whether the 'txResult' field is set and is not null */
  public boolean isNotNullTxResult() {
    return genClient.cacheValueIsNotNull(CacheKey.txResult);
  }

  /** Checks whether the 'txError' field is set and is not null */
  public boolean isNotNullTxError() {
    return genClient.cacheValueIsNotNull(CacheKey.txError);
  }

  /** Checks whether the 'amount' field is set and is not null */
  public boolean isNotNullAmount() {
    return genClient.cacheValueIsNotNull(CacheKey.amount);
  }

  /** Checks whether the 'tipAmount' field is set and is not null */
  public boolean isNotNullTipAmount() {
    return genClient.cacheValueIsNotNull(CacheKey.tipAmount);
  }

  /** Checks whether the 'cashBackAmount' field is set and is not null */
  public boolean isNotNullCashBackAmount() {
    return genClient.cacheValueIsNotNull(CacheKey.cashBackAmount);
  }

  /** Checks whether the 'errorCode' field is set and is not null */
  public boolean isNotNullErrorCode() {
    return genClient.cacheValueIsNotNull(CacheKey.errorCode);
  }

  /** Checks whether the 'errorText' field is set and is not null */
  public boolean isNotNullErrorText() {
    return genClient.cacheValueIsNotNull(CacheKey.errorText);
  }

  /** Checks whether the 'transactionDate' field is set and is not null */
  public boolean isNotNullTransactionDate() {
    return genClient.cacheValueIsNotNull(CacheKey.transactionDate);
  }

  /** Checks whether the 'transactionTime' field is set and is not null */
  public boolean isNotNullTransactionTime() {
    return genClient.cacheValueIsNotNull(CacheKey.transactionTime);
  }

  /** Checks whether the 'msrContainer' field is set and is not null */
  public boolean isNotNullMsrContainer() {
    return genClient.cacheValueIsNotNull(CacheKey.msrContainer);
  }

  /** Checks whether the 'msrMaskedTrack1' field is set and is not null */
  public boolean isNotNullMsrMaskedTrack1() {
    return genClient.cacheValueIsNotNull(CacheKey.msrMaskedTrack1);
  }

  /** Checks whether the 'msrMaskedTrack2' field is set and is not null */
  public boolean isNotNullMsrMaskedTrack2() {
    return genClient.cacheValueIsNotNull(CacheKey.msrMaskedTrack2);
  }

  /** Checks whether the 'maskedManualPan' field is set and is not null */
  public boolean isNotNullMaskedManualPan() {
    return genClient.cacheValueIsNotNull(CacheKey.maskedManualPan);
  }

  /** Checks whether the 'sredContainer' field is set and is not null */
  public boolean isNotNullSredContainer() {
    return genClient.cacheValueIsNotNull(CacheKey.sredContainer);
  }

  /** Checks whether the 'sred' field is set and is not null */
  public boolean isNotNullSred() {
    return genClient.cacheValueIsNotNull(CacheKey.sred);
  }

  /** Checks whether the 'ksn' field is set and is not null */
  public boolean isNotNullKsn() {
    return genClient.cacheValueIsNotNull(CacheKey.ksn);
  }

  /** Checks whether the 'transArmorContainer' field is set and is not null */
  public boolean isNotNullTransArmorContainer() {
    return genClient.cacheValueIsNotNull(CacheKey.transArmorContainer);
  }

  /** Checks whether the 'transArmorKey' field is set and is not null */
  public boolean isNotNullTransArmorKey() {
    return genClient.cacheValueIsNotNull(CacheKey.transArmorKey);
  }

  /** Checks whether the 'transArmorKeyId' field is set and is not null */
  public boolean isNotNullTransArmorKeyId() {
    return genClient.cacheValueIsNotNull(CacheKey.transArmorKeyId);
  }

  /** Checks whether the 'transArmorEncryptedTrack1' field is set and is not null */
  public boolean isNotNullTransArmorEncryptedTrack1() {
    return genClient.cacheValueIsNotNull(CacheKey.transArmorEncryptedTrack1);
  }

  /** Checks whether the 'transArmorEncryptedTrack2' field is set and is not null */
  public boolean isNotNullTransArmorEncryptedTrack2() {
    return genClient.cacheValueIsNotNull(CacheKey.transArmorEncryptedTrack2);
  }

  /** Checks whether the 'transArmorEncryptedEmvTag57' field is set and is not null */
  public boolean isNotNullTransArmorEncryptedEmvTag57() {
    return genClient.cacheValueIsNotNull(CacheKey.transArmorEncryptedEmvTag57);
  }

  /** Checks whether the 'transArmorEncryptedEmvTag5A' field is set and is not null */
  public boolean isNotNullTransArmorEncryptedEmvTag5A() {
    return genClient.cacheValueIsNotNull(CacheKey.transArmorEncryptedEmvTag5A);
  }

  /** Checks whether the 'transArmorEncryptedManualKeyedData' field is set and is not null */
  public boolean isNotNullTransArmorEncryptedManualKeyedData() {
    return genClient.cacheValueIsNotNull(CacheKey.transArmorEncryptedManualKeyedData);
  }

  /** Checks whether the 'iccContainer' field is set and is not null */
  public boolean isNotNullIccContainer() {
    return genClient.cacheValueIsNotNull(CacheKey.iccContainer);
  }

  /** Checks whether the 'iccApplicationInterchangeProfile' field is set and is not null */
  public boolean isNotNullIccApplicationInterchangeProfile() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationInterchangeProfile);
  }

  /** Checks whether the 'iccMaskedEmv57' field is set and is not null */
  public boolean isNotNullIccMaskedEmv57() {
    return genClient.cacheValueIsNotNull(CacheKey.iccMaskedEmv57);
  }

  /** Checks whether the 'iccMaskedEmv5A' field is set and is not null */
  public boolean isNotNullIccMaskedEmv5A() {
    return genClient.cacheValueIsNotNull(CacheKey.iccMaskedEmv5A);
  }

  /** Checks whether the 'iccApplicationPanSequenceNumber' field is set and is not null */
  public boolean isNotNullIccApplicationPanSequenceNumber() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationPanSequenceNumber);
  }

  /** Checks whether the 'iccApplicationExpirationDate' field is set and is not null */
  public boolean isNotNullIccApplicationExpirationDate() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationExpirationDate);
  }

  /** Checks whether the 'iccApplicationEffectiveDate' field is set and is not null */
  public boolean isNotNullIccApplicationEffectiveDate() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationEffectiveDate);
  }

  /** Checks whether the 'iccAmountAuthorized' field is set and is not null */
  public boolean isNotNullIccAmountAuthorized() {
    return genClient.cacheValueIsNotNull(CacheKey.iccAmountAuthorized);
  }

  /** Checks whether the 'iccAmountOther' field is set and is not null */
  public boolean isNotNullIccAmountOther() {
    return genClient.cacheValueIsNotNull(CacheKey.iccAmountOther);
  }

  /** Checks whether the 'iccTransactionCurrencyCode' field is set and is not null */
  public boolean isNotNullIccTransactionCurrencyCode() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTransactionCurrencyCode);
  }

  /** Checks whether the 'iccTransactionCurrencyExponent' field is set and is not null */
  public boolean isNotNullIccTransactionCurrencyExponent() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTransactionCurrencyExponent);
  }

  /** Checks whether the 'iccApplicationUsageControl' field is set and is not null */
  public boolean isNotNullIccApplicationUsageControl() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationUsageControl);
  }

  /** Checks whether the 'iccIssuerActionCodeDefault' field is set and is not null */
  public boolean isNotNullIccIssuerActionCodeDefault() {
    return genClient.cacheValueIsNotNull(CacheKey.iccIssuerActionCodeDefault);
  }

  /** Checks whether the 'iccIssuerActionCodeDenial' field is set and is not null */
  public boolean isNotNullIccIssuerActionCodeDenial() {
    return genClient.cacheValueIsNotNull(CacheKey.iccIssuerActionCodeDenial);
  }

  /** Checks whether the 'iccIssuerActionCodeOnline' field is set and is not null */
  public boolean isNotNullIccIssuerActionCodeOnline() {
    return genClient.cacheValueIsNotNull(CacheKey.iccIssuerActionCodeOnline);
  }

  /** Checks whether the 'iccApplicationLabel' field is set and is not null */
  public boolean isNotNullIccApplicationLabel() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationLabel);
  }

  /** Checks whether the 'iccApplicationCryptogram' field is set and is not null */
  public boolean isNotNullIccApplicationCryptogram() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationCryptogram);
  }

  /** Checks whether the 'iccApplicationIdentifierCard' field is set and is not null */
  public boolean isNotNullIccApplicationIdentifierCard() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationIdentifierCard);
  }

  /** Checks whether the 'iccApplicationIdentifierTerminal' field is set and is not null */
  public boolean isNotNullIccApplicationIdentifierTerminal() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationIdentifierTerminal);
  }

  /** Checks whether the 'iccApplicationTransactionCounter' field is set and is not null */
  public boolean isNotNullIccApplicationTransactionCounter() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationTransactionCounter);
  }

  /** Checks whether the 'iccApplicationVersionNumber' field is set and is not null */
  public boolean isNotNullIccApplicationVersionNumber() {
    return genClient.cacheValueIsNotNull(CacheKey.iccApplicationVersionNumber);
  }

  /** Checks whether the 'iccCryptogramInformationData' field is set and is not null */
  public boolean isNotNullIccCryptogramInformationData() {
    return genClient.cacheValueIsNotNull(CacheKey.iccCryptogramInformationData);
  }

  /** Checks whether the 'iccCvmResults' field is set and is not null */
  public boolean isNotNullIccCvmResults() {
    return genClient.cacheValueIsNotNull(CacheKey.iccCvmResults);
  }

  /** Checks whether the 'iccInterfaceDeviceSerialNumber' field is set and is not null */
  public boolean isNotNullIccInterfaceDeviceSerialNumber() {
    return genClient.cacheValueIsNotNull(CacheKey.iccInterfaceDeviceSerialNumber);
  }

  /** Checks whether the 'iccIssuerApplicationData' field is set and is not null */
  public boolean isNotNullIccIssuerApplicationData() {
    return genClient.cacheValueIsNotNull(CacheKey.iccIssuerApplicationData);
  }

  /** Checks whether the 'iccPosEntryModeCode' field is set and is not null */
  public boolean isNotNullIccPosEntryModeCode() {
    return genClient.cacheValueIsNotNull(CacheKey.iccPosEntryModeCode);
  }

  /** Checks whether the 'iccTerminalCapabilities' field is set and is not null */
  public boolean isNotNullIccTerminalCapabilities() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTerminalCapabilities);
  }

  /** Checks whether the 'iccTerminalCountryCode' field is set and is not null */
  public boolean isNotNullIccTerminalCountryCode() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTerminalCountryCode);
  }

  /** Checks whether the 'iccTerminalType' field is set and is not null */
  public boolean isNotNullIccTerminalType() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTerminalType);
  }

  /** Checks whether the 'iccTvr' field is set and is not null */
  public boolean isNotNullIccTvr() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTvr);
  }

  /** Checks whether the 'iccTransactionDate' field is set and is not null */
  public boolean isNotNullIccTransactionDate() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTransactionDate);
  }

  /** Checks whether the 'iccTsi' field is set and is not null */
  public boolean isNotNullIccTsi() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTsi);
  }

  /** Checks whether the 'iccTransactionType' field is set and is not null */
  public boolean isNotNullIccTransactionType() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTransactionType);
  }

  /** Checks whether the 'iccUnpredictableNumber' field is set and is not null */
  public boolean isNotNullIccUnpredictableNumber() {
    return genClient.cacheValueIsNotNull(CacheKey.iccUnpredictableNumber);
  }

  /** Checks whether the 'iccTransactionTime' field is set and is not null */
  public boolean isNotNullIccTransactionTime() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTransactionTime);
  }

  /** Checks whether the 'iccAdditionalTerminalCapabilities' field is set and is not null */
  public boolean isNotNullIccAdditionalTerminalCapabilities() {
    return genClient.cacheValueIsNotNull(CacheKey.iccAdditionalTerminalCapabilities);
  }

  /** Checks whether the 'iccTransactionCategoryCode' field is set and is not null */
  public boolean isNotNullIccTransactionCategoryCode() {
    return genClient.cacheValueIsNotNull(CacheKey.iccTransactionCategoryCode);
  }

  /** Checks whether the 'iccIssuerApplicationPreferredName' field is set and is not null */
  public boolean isNotNullIccIssuerApplicationPreferredName() {
    return genClient.cacheValueIsNotNull(CacheKey.iccIssuerApplicationPreferredName);
  }

  /** Checks whether the 'iccCardholderName' field is set and is not null */
  public boolean isNotNullIccCardholderName() {
    return genClient.cacheValueIsNotNull(CacheKey.iccCardholderName);
  }

  /** Checks whether the 'iccIssuerCodeTableIndex' field is set and is not null */
  public boolean isNotNullIccIssuerCodeTableIndex() {
    return genClient.cacheValueIsNotNull(CacheKey.iccIssuerCodeTableIndex);
  }

  /** Checks whether the 'iccIssuerScripts' field is set and is not null */
  public boolean isNotNullIccIssuerScripts() {
    return genClient.cacheValueIsNotNull(CacheKey.iccIssuerScripts);
  }

  /** Checks whether the 'iccIssuerScriptResults' field is set and is not null */
  public boolean isNotNullIccIssuerScriptResults() {
    return genClient.cacheValueIsNotNull(CacheKey.iccIssuerScriptResults);
  }

  /** Checks whether the 'debugTrack2EquivalentData' field is set and is not null */
  public boolean isNotNullDebugTrack2EquivalentData() {
    return genClient.cacheValueIsNotNull(CacheKey.debugTrack2EquivalentData);
  }

  /** Checks whether the 'debugApplicationPan' field is set and is not null */
  public boolean isNotNullDebugApplicationPan() {
    return genClient.cacheValueIsNotNull(CacheKey.debugApplicationPan);
  }

  /** Checks whether the 'debugAmountAuthorizedBinary' field is set and is not null */
  public boolean isNotNullDebugAmountAuthorizedBinary() {
    return genClient.cacheValueIsNotNull(CacheKey.debugAmountAuthorizedBinary);
  }

  /** Checks whether the 'debugAmountOtherBinary' field is set and is not null */
  public boolean isNotNullDebugAmountOtherBinary() {
    return genClient.cacheValueIsNotNull(CacheKey.debugAmountOtherBinary);
  }

  /** Checks whether the 'debugTransactionStatusInformation' field is set and is not null */
  public boolean isNotNullDebugTransactionStatusInformation() {
    return genClient.cacheValueIsNotNull(CacheKey.debugTransactionStatusInformation);
  }

  /** Checks whether the 'debugPlainTrack1' field is set and is not null */
  public boolean isNotNullDebugPlainTrack1() {
    return genClient.cacheValueIsNotNull(CacheKey.debugPlainTrack1);
  }

  /** Checks whether the 'debugPlainTrack2' field is set and is not null */
  public boolean isNotNullDebugPlainTrack2() {
    return genClient.cacheValueIsNotNull(CacheKey.debugPlainTrack2);
  }

  /** Checks whether the 'schemePunATC' field is set and is not null */
  public boolean isNotNullSchemePunATC() {
    return genClient.cacheValueIsNotNull(CacheKey.schemePunATC);
  }

  /** Checks whether the 'schemeThirdPartyData' field is set and is not null */
  public boolean isNotNullSchemeThirdPartyData() {
    return genClient.cacheValueIsNotNull(CacheKey.schemeThirdPartyData);
  }

  /** Checks whether the 'schemeMerchantCustomData' field is set and is not null */
  public boolean isNotNullSchemeMerchantCustomData() {
    return genClient.cacheValueIsNotNull(CacheKey.schemeMerchantCustomData);
  }

  /** Checks whether the 'schemeTerminalEntryCapability' field is set and is not null */
  public boolean isNotNullSchemeTerminalEntryCapability() {
    return genClient.cacheValueIsNotNull(CacheKey.schemeTerminalEntryCapability);
  }

  /** Checks whether the 'pinBlockContainer' field is set and is not null */
  public boolean isNotNullPinBlockContainer() {
    return genClient.cacheValueIsNotNull(CacheKey.pinBlockContainer);
  }

  /** Checks whether the 'pinBlock' field is set and is not null */
  public boolean isNotNullPinBlock() {
    return genClient.cacheValueIsNotNull(CacheKey.pinBlock);
  }

  /** Checks whether the 'pinBlockKsn' field is set and is not null */
  public boolean isNotNullPinBlockKsn() {
    return genClient.cacheValueIsNotNull(CacheKey.pinBlockKsn);
  }

  /** Checks whether the 'mac' field is set and is not null */
  public boolean isNotNullMac() {
    return genClient.cacheValueIsNotNull(CacheKey.mac);
  }

  /** Checks whether the 'macKsn' field is set and is not null */
  public boolean isNotNullMacKsn() {
    return genClient.cacheValueIsNotNull(CacheKey.macKsn);
  }

  /** Checks whether the 'gwContainer' field is set and is not null */
  public boolean isNotNullGwContainer() {
    return genClient.cacheValueIsNotNull(CacheKey.gwContainer);
  }

  /** Checks whether the 'gwIssuerAuthenticationData' field is set and is not null */
  public boolean isNotNullGwIssuerAuthenticationData() {
    return genClient.cacheValueIsNotNull(CacheKey.gwIssuerAuthenticationData);
  }

  /** Checks whether the 'gwIssuerScriptTemplate1' field is set and is not null */
  public boolean isNotNullGwIssuerScriptTemplate1() {
    return genClient.cacheValueIsNotNull(CacheKey.gwIssuerScriptTemplate1);
  }

  /** Checks whether the 'gwIssuerScriptTemplate2' field is set and is not null */
  public boolean isNotNullGwIssuerScriptTemplate2() {
    return genClient.cacheValueIsNotNull(CacheKey.gwIssuerScriptTemplate2);
  }

  /** Checks whether the 'gwIssuerAuthorizationResponseCode' field is set and is not null */
  public boolean isNotNullGwIssuerAuthorizationResponseCode() {
    return genClient.cacheValueIsNotNull(CacheKey.gwIssuerAuthorizationResponseCode);
  }

  /** Checks whether the 'gwMessageControlField' field is set and is not null */
  public boolean isNotNullGwMessageControlField() {
    return genClient.cacheValueIsNotNull(CacheKey.gwMessageControlField);
  }

  /** Checks whether the 'gwTxResult' field is set and is not null */
  public boolean isNotNullGwTxResult() {
    return genClient.cacheValueIsNotNull(CacheKey.gwTxResult);
  }

  /** Checks whether the 'cvmResult' field is set and is not null */
  public boolean isNotNullCvmResult() {
    return genClient.cacheValueIsNotNull(CacheKey.cvmResult);
  }

  /** Checks whether the 'serviceCode1' field is set and is not null */
  public boolean isNotNullServiceCode1() {
    return genClient.cacheValueIsNotNull(CacheKey.serviceCode1);
  }

  /** Checks whether the 'serviceCode2' field is set and is not null */
  public boolean isNotNullServiceCode2() {
    return genClient.cacheValueIsNotNull(CacheKey.serviceCode2);
  }

  /** Checks whether the 'serviceCode3' field is set and is not null */
  public boolean isNotNullServiceCode3() {
    return genClient.cacheValueIsNotNull(CacheKey.serviceCode3);
  }

  /** Checks whether the 'offlineApprovalAuthCode' field is set and is not null */
  public boolean isNotNullOfflineApprovalAuthCode() {
    return genClient.cacheValueIsNotNull(CacheKey.offlineApprovalAuthCode);
  }

  /** Checks whether the 'availableOfflineSpendingAmount' field is set and is not null */
  public boolean isNotNullAvailableOfflineSpendingAmount() {
    return genClient.cacheValueIsNotNull(CacheKey.availableOfflineSpendingAmount);
  }



  /** Checks whether the 'txResult' field has been set, however the value could be null */
  public boolean hasTxResult() {
    return genClient.cacheHasKey(CacheKey.txResult);
  }

  /** Checks whether the 'txError' field has been set, however the value could be null */
  public boolean hasTxError() {
    return genClient.cacheHasKey(CacheKey.txError);
  }

  /** Checks whether the 'amount' field has been set, however the value could be null */
  public boolean hasAmount() {
    return genClient.cacheHasKey(CacheKey.amount);
  }

  /** Checks whether the 'tipAmount' field has been set, however the value could be null */
  public boolean hasTipAmount() {
    return genClient.cacheHasKey(CacheKey.tipAmount);
  }

  /** Checks whether the 'cashBackAmount' field has been set, however the value could be null */
  public boolean hasCashBackAmount() {
    return genClient.cacheHasKey(CacheKey.cashBackAmount);
  }

  /** Checks whether the 'errorCode' field has been set, however the value could be null */
  public boolean hasErrorCode() {
    return genClient.cacheHasKey(CacheKey.errorCode);
  }

  /** Checks whether the 'errorText' field has been set, however the value could be null */
  public boolean hasErrorText() {
    return genClient.cacheHasKey(CacheKey.errorText);
  }

  /** Checks whether the 'transactionDate' field has been set, however the value could be null */
  public boolean hasTransactionDate() {
    return genClient.cacheHasKey(CacheKey.transactionDate);
  }

  /** Checks whether the 'transactionTime' field has been set, however the value could be null */
  public boolean hasTransactionTime() {
    return genClient.cacheHasKey(CacheKey.transactionTime);
  }

  /** Checks whether the 'msrContainer' field has been set, however the value could be null */
  public boolean hasMsrContainer() {
    return genClient.cacheHasKey(CacheKey.msrContainer);
  }

  /** Checks whether the 'msrMaskedTrack1' field has been set, however the value could be null */
  public boolean hasMsrMaskedTrack1() {
    return genClient.cacheHasKey(CacheKey.msrMaskedTrack1);
  }

  /** Checks whether the 'msrMaskedTrack2' field has been set, however the value could be null */
  public boolean hasMsrMaskedTrack2() {
    return genClient.cacheHasKey(CacheKey.msrMaskedTrack2);
  }

  /** Checks whether the 'maskedManualPan' field has been set, however the value could be null */
  public boolean hasMaskedManualPan() {
    return genClient.cacheHasKey(CacheKey.maskedManualPan);
  }

  /** Checks whether the 'sredContainer' field has been set, however the value could be null */
  public boolean hasSredContainer() {
    return genClient.cacheHasKey(CacheKey.sredContainer);
  }

  /** Checks whether the 'sred' field has been set, however the value could be null */
  public boolean hasSred() {
    return genClient.cacheHasKey(CacheKey.sred);
  }

  /** Checks whether the 'ksn' field has been set, however the value could be null */
  public boolean hasKsn() {
    return genClient.cacheHasKey(CacheKey.ksn);
  }

  /** Checks whether the 'transArmorContainer' field has been set, however the value could be null */
  public boolean hasTransArmorContainer() {
    return genClient.cacheHasKey(CacheKey.transArmorContainer);
  }

  /** Checks whether the 'transArmorKey' field has been set, however the value could be null */
  public boolean hasTransArmorKey() {
    return genClient.cacheHasKey(CacheKey.transArmorKey);
  }

  /** Checks whether the 'transArmorKeyId' field has been set, however the value could be null */
  public boolean hasTransArmorKeyId() {
    return genClient.cacheHasKey(CacheKey.transArmorKeyId);
  }

  /** Checks whether the 'transArmorEncryptedTrack1' field has been set, however the value could be null */
  public boolean hasTransArmorEncryptedTrack1() {
    return genClient.cacheHasKey(CacheKey.transArmorEncryptedTrack1);
  }

  /** Checks whether the 'transArmorEncryptedTrack2' field has been set, however the value could be null */
  public boolean hasTransArmorEncryptedTrack2() {
    return genClient.cacheHasKey(CacheKey.transArmorEncryptedTrack2);
  }

  /** Checks whether the 'transArmorEncryptedEmvTag57' field has been set, however the value could be null */
  public boolean hasTransArmorEncryptedEmvTag57() {
    return genClient.cacheHasKey(CacheKey.transArmorEncryptedEmvTag57);
  }

  /** Checks whether the 'transArmorEncryptedEmvTag5A' field has been set, however the value could be null */
  public boolean hasTransArmorEncryptedEmvTag5A() {
    return genClient.cacheHasKey(CacheKey.transArmorEncryptedEmvTag5A);
  }

  /** Checks whether the 'transArmorEncryptedManualKeyedData' field has been set, however the value could be null */
  public boolean hasTransArmorEncryptedManualKeyedData() {
    return genClient.cacheHasKey(CacheKey.transArmorEncryptedManualKeyedData);
  }

  /** Checks whether the 'iccContainer' field has been set, however the value could be null */
  public boolean hasIccContainer() {
    return genClient.cacheHasKey(CacheKey.iccContainer);
  }

  /** Checks whether the 'iccApplicationInterchangeProfile' field has been set, however the value could be null */
  public boolean hasIccApplicationInterchangeProfile() {
    return genClient.cacheHasKey(CacheKey.iccApplicationInterchangeProfile);
  }

  /** Checks whether the 'iccMaskedEmv57' field has been set, however the value could be null */
  public boolean hasIccMaskedEmv57() {
    return genClient.cacheHasKey(CacheKey.iccMaskedEmv57);
  }

  /** Checks whether the 'iccMaskedEmv5A' field has been set, however the value could be null */
  public boolean hasIccMaskedEmv5A() {
    return genClient.cacheHasKey(CacheKey.iccMaskedEmv5A);
  }

  /** Checks whether the 'iccApplicationPanSequenceNumber' field has been set, however the value could be null */
  public boolean hasIccApplicationPanSequenceNumber() {
    return genClient.cacheHasKey(CacheKey.iccApplicationPanSequenceNumber);
  }

  /** Checks whether the 'iccApplicationExpirationDate' field has been set, however the value could be null */
  public boolean hasIccApplicationExpirationDate() {
    return genClient.cacheHasKey(CacheKey.iccApplicationExpirationDate);
  }

  /** Checks whether the 'iccApplicationEffectiveDate' field has been set, however the value could be null */
  public boolean hasIccApplicationEffectiveDate() {
    return genClient.cacheHasKey(CacheKey.iccApplicationEffectiveDate);
  }

  /** Checks whether the 'iccAmountAuthorized' field has been set, however the value could be null */
  public boolean hasIccAmountAuthorized() {
    return genClient.cacheHasKey(CacheKey.iccAmountAuthorized);
  }

  /** Checks whether the 'iccAmountOther' field has been set, however the value could be null */
  public boolean hasIccAmountOther() {
    return genClient.cacheHasKey(CacheKey.iccAmountOther);
  }

  /** Checks whether the 'iccTransactionCurrencyCode' field has been set, however the value could be null */
  public boolean hasIccTransactionCurrencyCode() {
    return genClient.cacheHasKey(CacheKey.iccTransactionCurrencyCode);
  }

  /** Checks whether the 'iccTransactionCurrencyExponent' field has been set, however the value could be null */
  public boolean hasIccTransactionCurrencyExponent() {
    return genClient.cacheHasKey(CacheKey.iccTransactionCurrencyExponent);
  }

  /** Checks whether the 'iccApplicationUsageControl' field has been set, however the value could be null */
  public boolean hasIccApplicationUsageControl() {
    return genClient.cacheHasKey(CacheKey.iccApplicationUsageControl);
  }

  /** Checks whether the 'iccIssuerActionCodeDefault' field has been set, however the value could be null */
  public boolean hasIccIssuerActionCodeDefault() {
    return genClient.cacheHasKey(CacheKey.iccIssuerActionCodeDefault);
  }

  /** Checks whether the 'iccIssuerActionCodeDenial' field has been set, however the value could be null */
  public boolean hasIccIssuerActionCodeDenial() {
    return genClient.cacheHasKey(CacheKey.iccIssuerActionCodeDenial);
  }

  /** Checks whether the 'iccIssuerActionCodeOnline' field has been set, however the value could be null */
  public boolean hasIccIssuerActionCodeOnline() {
    return genClient.cacheHasKey(CacheKey.iccIssuerActionCodeOnline);
  }

  /** Checks whether the 'iccApplicationLabel' field has been set, however the value could be null */
  public boolean hasIccApplicationLabel() {
    return genClient.cacheHasKey(CacheKey.iccApplicationLabel);
  }

  /** Checks whether the 'iccApplicationCryptogram' field has been set, however the value could be null */
  public boolean hasIccApplicationCryptogram() {
    return genClient.cacheHasKey(CacheKey.iccApplicationCryptogram);
  }

  /** Checks whether the 'iccApplicationIdentifierCard' field has been set, however the value could be null */
  public boolean hasIccApplicationIdentifierCard() {
    return genClient.cacheHasKey(CacheKey.iccApplicationIdentifierCard);
  }

  /** Checks whether the 'iccApplicationIdentifierTerminal' field has been set, however the value could be null */
  public boolean hasIccApplicationIdentifierTerminal() {
    return genClient.cacheHasKey(CacheKey.iccApplicationIdentifierTerminal);
  }

  /** Checks whether the 'iccApplicationTransactionCounter' field has been set, however the value could be null */
  public boolean hasIccApplicationTransactionCounter() {
    return genClient.cacheHasKey(CacheKey.iccApplicationTransactionCounter);
  }

  /** Checks whether the 'iccApplicationVersionNumber' field has been set, however the value could be null */
  public boolean hasIccApplicationVersionNumber() {
    return genClient.cacheHasKey(CacheKey.iccApplicationVersionNumber);
  }

  /** Checks whether the 'iccCryptogramInformationData' field has been set, however the value could be null */
  public boolean hasIccCryptogramInformationData() {
    return genClient.cacheHasKey(CacheKey.iccCryptogramInformationData);
  }

  /** Checks whether the 'iccCvmResults' field has been set, however the value could be null */
  public boolean hasIccCvmResults() {
    return genClient.cacheHasKey(CacheKey.iccCvmResults);
  }

  /** Checks whether the 'iccInterfaceDeviceSerialNumber' field has been set, however the value could be null */
  public boolean hasIccInterfaceDeviceSerialNumber() {
    return genClient.cacheHasKey(CacheKey.iccInterfaceDeviceSerialNumber);
  }

  /** Checks whether the 'iccIssuerApplicationData' field has been set, however the value could be null */
  public boolean hasIccIssuerApplicationData() {
    return genClient.cacheHasKey(CacheKey.iccIssuerApplicationData);
  }

  /** Checks whether the 'iccPosEntryModeCode' field has been set, however the value could be null */
  public boolean hasIccPosEntryModeCode() {
    return genClient.cacheHasKey(CacheKey.iccPosEntryModeCode);
  }

  /** Checks whether the 'iccTerminalCapabilities' field has been set, however the value could be null */
  public boolean hasIccTerminalCapabilities() {
    return genClient.cacheHasKey(CacheKey.iccTerminalCapabilities);
  }

  /** Checks whether the 'iccTerminalCountryCode' field has been set, however the value could be null */
  public boolean hasIccTerminalCountryCode() {
    return genClient.cacheHasKey(CacheKey.iccTerminalCountryCode);
  }

  /** Checks whether the 'iccTerminalType' field has been set, however the value could be null */
  public boolean hasIccTerminalType() {
    return genClient.cacheHasKey(CacheKey.iccTerminalType);
  }

  /** Checks whether the 'iccTvr' field has been set, however the value could be null */
  public boolean hasIccTvr() {
    return genClient.cacheHasKey(CacheKey.iccTvr);
  }

  /** Checks whether the 'iccTransactionDate' field has been set, however the value could be null */
  public boolean hasIccTransactionDate() {
    return genClient.cacheHasKey(CacheKey.iccTransactionDate);
  }

  /** Checks whether the 'iccTsi' field has been set, however the value could be null */
  public boolean hasIccTsi() {
    return genClient.cacheHasKey(CacheKey.iccTsi);
  }

  /** Checks whether the 'iccTransactionType' field has been set, however the value could be null */
  public boolean hasIccTransactionType() {
    return genClient.cacheHasKey(CacheKey.iccTransactionType);
  }

  /** Checks whether the 'iccUnpredictableNumber' field has been set, however the value could be null */
  public boolean hasIccUnpredictableNumber() {
    return genClient.cacheHasKey(CacheKey.iccUnpredictableNumber);
  }

  /** Checks whether the 'iccTransactionTime' field has been set, however the value could be null */
  public boolean hasIccTransactionTime() {
    return genClient.cacheHasKey(CacheKey.iccTransactionTime);
  }

  /** Checks whether the 'iccAdditionalTerminalCapabilities' field has been set, however the value could be null */
  public boolean hasIccAdditionalTerminalCapabilities() {
    return genClient.cacheHasKey(CacheKey.iccAdditionalTerminalCapabilities);
  }

  /** Checks whether the 'iccTransactionCategoryCode' field has been set, however the value could be null */
  public boolean hasIccTransactionCategoryCode() {
    return genClient.cacheHasKey(CacheKey.iccTransactionCategoryCode);
  }

  /** Checks whether the 'iccIssuerApplicationPreferredName' field has been set, however the value could be null */
  public boolean hasIccIssuerApplicationPreferredName() {
    return genClient.cacheHasKey(CacheKey.iccIssuerApplicationPreferredName);
  }

  /** Checks whether the 'iccCardholderName' field has been set, however the value could be null */
  public boolean hasIccCardholderName() {
    return genClient.cacheHasKey(CacheKey.iccCardholderName);
  }

  /** Checks whether the 'iccIssuerCodeTableIndex' field has been set, however the value could be null */
  public boolean hasIccIssuerCodeTableIndex() {
    return genClient.cacheHasKey(CacheKey.iccIssuerCodeTableIndex);
  }

  /** Checks whether the 'iccIssuerScripts' field has been set, however the value could be null */
  public boolean hasIccIssuerScripts() {
    return genClient.cacheHasKey(CacheKey.iccIssuerScripts);
  }

  /** Checks whether the 'iccIssuerScriptResults' field has been set, however the value could be null */
  public boolean hasIccIssuerScriptResults() {
    return genClient.cacheHasKey(CacheKey.iccIssuerScriptResults);
  }

  /** Checks whether the 'debugTrack2EquivalentData' field has been set, however the value could be null */
  public boolean hasDebugTrack2EquivalentData() {
    return genClient.cacheHasKey(CacheKey.debugTrack2EquivalentData);
  }

  /** Checks whether the 'debugApplicationPan' field has been set, however the value could be null */
  public boolean hasDebugApplicationPan() {
    return genClient.cacheHasKey(CacheKey.debugApplicationPan);
  }

  /** Checks whether the 'debugAmountAuthorizedBinary' field has been set, however the value could be null */
  public boolean hasDebugAmountAuthorizedBinary() {
    return genClient.cacheHasKey(CacheKey.debugAmountAuthorizedBinary);
  }

  /** Checks whether the 'debugAmountOtherBinary' field has been set, however the value could be null */
  public boolean hasDebugAmountOtherBinary() {
    return genClient.cacheHasKey(CacheKey.debugAmountOtherBinary);
  }

  /** Checks whether the 'debugTransactionStatusInformation' field has been set, however the value could be null */
  public boolean hasDebugTransactionStatusInformation() {
    return genClient.cacheHasKey(CacheKey.debugTransactionStatusInformation);
  }

  /** Checks whether the 'debugPlainTrack1' field has been set, however the value could be null */
  public boolean hasDebugPlainTrack1() {
    return genClient.cacheHasKey(CacheKey.debugPlainTrack1);
  }

  /** Checks whether the 'debugPlainTrack2' field has been set, however the value could be null */
  public boolean hasDebugPlainTrack2() {
    return genClient.cacheHasKey(CacheKey.debugPlainTrack2);
  }

  /** Checks whether the 'schemePunATC' field has been set, however the value could be null */
  public boolean hasSchemePunATC() {
    return genClient.cacheHasKey(CacheKey.schemePunATC);
  }

  /** Checks whether the 'schemeThirdPartyData' field has been set, however the value could be null */
  public boolean hasSchemeThirdPartyData() {
    return genClient.cacheHasKey(CacheKey.schemeThirdPartyData);
  }

  /** Checks whether the 'schemeMerchantCustomData' field has been set, however the value could be null */
  public boolean hasSchemeMerchantCustomData() {
    return genClient.cacheHasKey(CacheKey.schemeMerchantCustomData);
  }

  /** Checks whether the 'schemeTerminalEntryCapability' field has been set, however the value could be null */
  public boolean hasSchemeTerminalEntryCapability() {
    return genClient.cacheHasKey(CacheKey.schemeTerminalEntryCapability);
  }

  /** Checks whether the 'pinBlockContainer' field has been set, however the value could be null */
  public boolean hasPinBlockContainer() {
    return genClient.cacheHasKey(CacheKey.pinBlockContainer);
  }

  /** Checks whether the 'pinBlock' field has been set, however the value could be null */
  public boolean hasPinBlock() {
    return genClient.cacheHasKey(CacheKey.pinBlock);
  }

  /** Checks whether the 'pinBlockKsn' field has been set, however the value could be null */
  public boolean hasPinBlockKsn() {
    return genClient.cacheHasKey(CacheKey.pinBlockKsn);
  }

  /** Checks whether the 'mac' field has been set, however the value could be null */
  public boolean hasMac() {
    return genClient.cacheHasKey(CacheKey.mac);
  }

  /** Checks whether the 'macKsn' field has been set, however the value could be null */
  public boolean hasMacKsn() {
    return genClient.cacheHasKey(CacheKey.macKsn);
  }

  /** Checks whether the 'gwContainer' field has been set, however the value could be null */
  public boolean hasGwContainer() {
    return genClient.cacheHasKey(CacheKey.gwContainer);
  }

  /** Checks whether the 'gwIssuerAuthenticationData' field has been set, however the value could be null */
  public boolean hasGwIssuerAuthenticationData() {
    return genClient.cacheHasKey(CacheKey.gwIssuerAuthenticationData);
  }

  /** Checks whether the 'gwIssuerScriptTemplate1' field has been set, however the value could be null */
  public boolean hasGwIssuerScriptTemplate1() {
    return genClient.cacheHasKey(CacheKey.gwIssuerScriptTemplate1);
  }

  /** Checks whether the 'gwIssuerScriptTemplate2' field has been set, however the value could be null */
  public boolean hasGwIssuerScriptTemplate2() {
    return genClient.cacheHasKey(CacheKey.gwIssuerScriptTemplate2);
  }

  /** Checks whether the 'gwIssuerAuthorizationResponseCode' field has been set, however the value could be null */
  public boolean hasGwIssuerAuthorizationResponseCode() {
    return genClient.cacheHasKey(CacheKey.gwIssuerAuthorizationResponseCode);
  }

  /** Checks whether the 'gwMessageControlField' field has been set, however the value could be null */
  public boolean hasGwMessageControlField() {
    return genClient.cacheHasKey(CacheKey.gwMessageControlField);
  }

  /** Checks whether the 'gwTxResult' field has been set, however the value could be null */
  public boolean hasGwTxResult() {
    return genClient.cacheHasKey(CacheKey.gwTxResult);
  }

  /** Checks whether the 'cvmResult' field has been set, however the value could be null */
  public boolean hasCvmResult() {
    return genClient.cacheHasKey(CacheKey.cvmResult);
  }

  /** Checks whether the 'serviceCode1' field has been set, however the value could be null */
  public boolean hasServiceCode1() {
    return genClient.cacheHasKey(CacheKey.serviceCode1);
  }

  /** Checks whether the 'serviceCode2' field has been set, however the value could be null */
  public boolean hasServiceCode2() {
    return genClient.cacheHasKey(CacheKey.serviceCode2);
  }

  /** Checks whether the 'serviceCode3' field has been set, however the value could be null */
  public boolean hasServiceCode3() {
    return genClient.cacheHasKey(CacheKey.serviceCode3);
  }

  /** Checks whether the 'offlineApprovalAuthCode' field has been set, however the value could be null */
  public boolean hasOfflineApprovalAuthCode() {
    return genClient.cacheHasKey(CacheKey.offlineApprovalAuthCode);
  }

  /** Checks whether the 'availableOfflineSpendingAmount' field has been set, however the value could be null */
  public boolean hasAvailableOfflineSpendingAmount() {
    return genClient.cacheHasKey(CacheKey.availableOfflineSpendingAmount);
  }


  /**
   * Sets the field 'txResult'.
   */
  public TransactionData setTxResult(com.clover.sdk.v3.pay.TxResult txResult) {
    return genClient.setOther(txResult, CacheKey.txResult);
  }

  /**
   * Sets the field 'txError'.
   */
  public TransactionData setTxError(com.clover.sdk.v3.pay.ErrorCode txError) {
    return genClient.setOther(txError, CacheKey.txError);
  }

  /**
   * Sets the field 'amount'.
   */
  public TransactionData setAmount(java.lang.Double amount) {
    return genClient.setOther(amount, CacheKey.amount);
  }

  /**
   * Sets the field 'tipAmount'.
   */
  public TransactionData setTipAmount(java.lang.Double tipAmount) {
    return genClient.setOther(tipAmount, CacheKey.tipAmount);
  }

  /**
   * Sets the field 'cashBackAmount'.
   */
  public TransactionData setCashBackAmount(java.lang.Double cashBackAmount) {
    return genClient.setOther(cashBackAmount, CacheKey.cashBackAmount);
  }

  /**
   * Sets the field 'errorCode'.
   */
  public TransactionData setErrorCode(java.lang.String errorCode) {
    return genClient.setOther(errorCode, CacheKey.errorCode);
  }

  /**
   * Sets the field 'errorText'.
   */
  public TransactionData setErrorText(java.lang.String errorText) {
    return genClient.setOther(errorText, CacheKey.errorText);
  }

  /**
   * Sets the field 'transactionDate'.
   */
  public TransactionData setTransactionDate(java.lang.String transactionDate) {
    return genClient.setOther(transactionDate, CacheKey.transactionDate);
  }

  /**
   * Sets the field 'transactionTime'.
   */
  public TransactionData setTransactionTime(java.lang.String transactionTime) {
    return genClient.setOther(transactionTime, CacheKey.transactionTime);
  }

  /**
   * Sets the field 'msrContainer'.
   */
  public TransactionData setMsrContainer(java.lang.String msrContainer) {
    return genClient.setOther(msrContainer, CacheKey.msrContainer);
  }

  /**
   * Sets the field 'msrMaskedTrack1'.
   */
  public TransactionData setMsrMaskedTrack1(java.lang.String msrMaskedTrack1) {
    return genClient.setOther(msrMaskedTrack1, CacheKey.msrMaskedTrack1);
  }

  /**
   * Sets the field 'msrMaskedTrack2'.
   */
  public TransactionData setMsrMaskedTrack2(java.lang.String msrMaskedTrack2) {
    return genClient.setOther(msrMaskedTrack2, CacheKey.msrMaskedTrack2);
  }

  /**
   * Sets the field 'maskedManualPan'.
   */
  public TransactionData setMaskedManualPan(java.lang.String maskedManualPan) {
    return genClient.setOther(maskedManualPan, CacheKey.maskedManualPan);
  }

  /**
   * Sets the field 'sredContainer'.
   */
  public TransactionData setSredContainer(java.lang.String sredContainer) {
    return genClient.setOther(sredContainer, CacheKey.sredContainer);
  }

  /**
   * Sets the field 'sred'.
   */
  public TransactionData setSred(java.lang.String sred) {
    return genClient.setOther(sred, CacheKey.sred);
  }

  /**
   * Sets the field 'ksn'.
   */
  public TransactionData setKsn(java.lang.String ksn) {
    return genClient.setOther(ksn, CacheKey.ksn);
  }

  /**
   * Sets the field 'transArmorContainer'.
   */
  public TransactionData setTransArmorContainer(java.lang.String transArmorContainer) {
    return genClient.setOther(transArmorContainer, CacheKey.transArmorContainer);
  }

  /**
   * Sets the field 'transArmorKey'.
   */
  public TransactionData setTransArmorKey(java.lang.String transArmorKey) {
    return genClient.setOther(transArmorKey, CacheKey.transArmorKey);
  }

  /**
   * Sets the field 'transArmorKeyId'.
   */
  public TransactionData setTransArmorKeyId(java.lang.String transArmorKeyId) {
    return genClient.setOther(transArmorKeyId, CacheKey.transArmorKeyId);
  }

  /**
   * Sets the field 'transArmorEncryptedTrack1'.
   */
  public TransactionData setTransArmorEncryptedTrack1(java.lang.String transArmorEncryptedTrack1) {
    return genClient.setOther(transArmorEncryptedTrack1, CacheKey.transArmorEncryptedTrack1);
  }

  /**
   * Sets the field 'transArmorEncryptedTrack2'.
   */
  public TransactionData setTransArmorEncryptedTrack2(java.lang.String transArmorEncryptedTrack2) {
    return genClient.setOther(transArmorEncryptedTrack2, CacheKey.transArmorEncryptedTrack2);
  }

  /**
   * Sets the field 'transArmorEncryptedEmvTag57'.
   */
  public TransactionData setTransArmorEncryptedEmvTag57(java.lang.String transArmorEncryptedEmvTag57) {
    return genClient.setOther(transArmorEncryptedEmvTag57, CacheKey.transArmorEncryptedEmvTag57);
  }

  /**
   * Sets the field 'transArmorEncryptedEmvTag5A'.
   */
  public TransactionData setTransArmorEncryptedEmvTag5A(java.lang.String transArmorEncryptedEmvTag5A) {
    return genClient.setOther(transArmorEncryptedEmvTag5A, CacheKey.transArmorEncryptedEmvTag5A);
  }

  /**
   * Sets the field 'transArmorEncryptedManualKeyedData'.
   */
  public TransactionData setTransArmorEncryptedManualKeyedData(java.lang.String transArmorEncryptedManualKeyedData) {
    return genClient.setOther(transArmorEncryptedManualKeyedData, CacheKey.transArmorEncryptedManualKeyedData);
  }

  /**
   * Sets the field 'iccContainer'.
   */
  public TransactionData setIccContainer(java.lang.String iccContainer) {
    return genClient.setOther(iccContainer, CacheKey.iccContainer);
  }

  /**
   * Sets the field 'iccApplicationInterchangeProfile'.
   */
  public TransactionData setIccApplicationInterchangeProfile(java.lang.String iccApplicationInterchangeProfile) {
    return genClient.setOther(iccApplicationInterchangeProfile, CacheKey.iccApplicationInterchangeProfile);
  }

  /**
   * Sets the field 'iccMaskedEmv57'.
   */
  public TransactionData setIccMaskedEmv57(java.lang.String iccMaskedEmv57) {
    return genClient.setOther(iccMaskedEmv57, CacheKey.iccMaskedEmv57);
  }

  /**
   * Sets the field 'iccMaskedEmv5A'.
   */
  public TransactionData setIccMaskedEmv5A(java.lang.String iccMaskedEmv5A) {
    return genClient.setOther(iccMaskedEmv5A, CacheKey.iccMaskedEmv5A);
  }

  /**
   * Sets the field 'iccApplicationPanSequenceNumber'.
   */
  public TransactionData setIccApplicationPanSequenceNumber(java.lang.String iccApplicationPanSequenceNumber) {
    return genClient.setOther(iccApplicationPanSequenceNumber, CacheKey.iccApplicationPanSequenceNumber);
  }

  /**
   * Sets the field 'iccApplicationExpirationDate'.
   */
  public TransactionData setIccApplicationExpirationDate(java.lang.String iccApplicationExpirationDate) {
    return genClient.setOther(iccApplicationExpirationDate, CacheKey.iccApplicationExpirationDate);
  }

  /**
   * Sets the field 'iccApplicationEffectiveDate'.
   */
  public TransactionData setIccApplicationEffectiveDate(java.lang.String iccApplicationEffectiveDate) {
    return genClient.setOther(iccApplicationEffectiveDate, CacheKey.iccApplicationEffectiveDate);
  }

  /**
   * Sets the field 'iccAmountAuthorized'.
   */
  public TransactionData setIccAmountAuthorized(java.lang.String iccAmountAuthorized) {
    return genClient.setOther(iccAmountAuthorized, CacheKey.iccAmountAuthorized);
  }

  /**
   * Sets the field 'iccAmountOther'.
   */
  public TransactionData setIccAmountOther(java.lang.String iccAmountOther) {
    return genClient.setOther(iccAmountOther, CacheKey.iccAmountOther);
  }

  /**
   * Sets the field 'iccTransactionCurrencyCode'.
   */
  public TransactionData setIccTransactionCurrencyCode(java.lang.String iccTransactionCurrencyCode) {
    return genClient.setOther(iccTransactionCurrencyCode, CacheKey.iccTransactionCurrencyCode);
  }

  /**
   * Sets the field 'iccTransactionCurrencyExponent'.
   */
  public TransactionData setIccTransactionCurrencyExponent(java.lang.String iccTransactionCurrencyExponent) {
    return genClient.setOther(iccTransactionCurrencyExponent, CacheKey.iccTransactionCurrencyExponent);
  }

  /**
   * Sets the field 'iccApplicationUsageControl'.
   */
  public TransactionData setIccApplicationUsageControl(java.lang.String iccApplicationUsageControl) {
    return genClient.setOther(iccApplicationUsageControl, CacheKey.iccApplicationUsageControl);
  }

  /**
   * Sets the field 'iccIssuerActionCodeDefault'.
   */
  public TransactionData setIccIssuerActionCodeDefault(java.lang.String iccIssuerActionCodeDefault) {
    return genClient.setOther(iccIssuerActionCodeDefault, CacheKey.iccIssuerActionCodeDefault);
  }

  /**
   * Sets the field 'iccIssuerActionCodeDenial'.
   */
  public TransactionData setIccIssuerActionCodeDenial(java.lang.String iccIssuerActionCodeDenial) {
    return genClient.setOther(iccIssuerActionCodeDenial, CacheKey.iccIssuerActionCodeDenial);
  }

  /**
   * Sets the field 'iccIssuerActionCodeOnline'.
   */
  public TransactionData setIccIssuerActionCodeOnline(java.lang.String iccIssuerActionCodeOnline) {
    return genClient.setOther(iccIssuerActionCodeOnline, CacheKey.iccIssuerActionCodeOnline);
  }

  /**
   * Sets the field 'iccApplicationLabel'.
   */
  public TransactionData setIccApplicationLabel(java.lang.String iccApplicationLabel) {
    return genClient.setOther(iccApplicationLabel, CacheKey.iccApplicationLabel);
  }

  /**
   * Sets the field 'iccApplicationCryptogram'.
   */
  public TransactionData setIccApplicationCryptogram(java.lang.String iccApplicationCryptogram) {
    return genClient.setOther(iccApplicationCryptogram, CacheKey.iccApplicationCryptogram);
  }

  /**
   * Sets the field 'iccApplicationIdentifierCard'.
   */
  public TransactionData setIccApplicationIdentifierCard(java.lang.String iccApplicationIdentifierCard) {
    return genClient.setOther(iccApplicationIdentifierCard, CacheKey.iccApplicationIdentifierCard);
  }

  /**
   * Sets the field 'iccApplicationIdentifierTerminal'.
   */
  public TransactionData setIccApplicationIdentifierTerminal(java.lang.String iccApplicationIdentifierTerminal) {
    return genClient.setOther(iccApplicationIdentifierTerminal, CacheKey.iccApplicationIdentifierTerminal);
  }

  /**
   * Sets the field 'iccApplicationTransactionCounter'.
   */
  public TransactionData setIccApplicationTransactionCounter(java.lang.String iccApplicationTransactionCounter) {
    return genClient.setOther(iccApplicationTransactionCounter, CacheKey.iccApplicationTransactionCounter);
  }

  /**
   * Sets the field 'iccApplicationVersionNumber'.
   */
  public TransactionData setIccApplicationVersionNumber(java.lang.String iccApplicationVersionNumber) {
    return genClient.setOther(iccApplicationVersionNumber, CacheKey.iccApplicationVersionNumber);
  }

  /**
   * Sets the field 'iccCryptogramInformationData'.
   */
  public TransactionData setIccCryptogramInformationData(java.lang.String iccCryptogramInformationData) {
    return genClient.setOther(iccCryptogramInformationData, CacheKey.iccCryptogramInformationData);
  }

  /**
   * Sets the field 'iccCvmResults'.
   */
  public TransactionData setIccCvmResults(java.lang.String iccCvmResults) {
    return genClient.setOther(iccCvmResults, CacheKey.iccCvmResults);
  }

  /**
   * Sets the field 'iccInterfaceDeviceSerialNumber'.
   */
  public TransactionData setIccInterfaceDeviceSerialNumber(java.lang.String iccInterfaceDeviceSerialNumber) {
    return genClient.setOther(iccInterfaceDeviceSerialNumber, CacheKey.iccInterfaceDeviceSerialNumber);
  }

  /**
   * Sets the field 'iccIssuerApplicationData'.
   */
  public TransactionData setIccIssuerApplicationData(java.lang.String iccIssuerApplicationData) {
    return genClient.setOther(iccIssuerApplicationData, CacheKey.iccIssuerApplicationData);
  }

  /**
   * Sets the field 'iccPosEntryModeCode'.
   */
  public TransactionData setIccPosEntryModeCode(java.lang.String iccPosEntryModeCode) {
    return genClient.setOther(iccPosEntryModeCode, CacheKey.iccPosEntryModeCode);
  }

  /**
   * Sets the field 'iccTerminalCapabilities'.
   */
  public TransactionData setIccTerminalCapabilities(java.lang.String iccTerminalCapabilities) {
    return genClient.setOther(iccTerminalCapabilities, CacheKey.iccTerminalCapabilities);
  }

  /**
   * Sets the field 'iccTerminalCountryCode'.
   */
  public TransactionData setIccTerminalCountryCode(java.lang.String iccTerminalCountryCode) {
    return genClient.setOther(iccTerminalCountryCode, CacheKey.iccTerminalCountryCode);
  }

  /**
   * Sets the field 'iccTerminalType'.
   */
  public TransactionData setIccTerminalType(java.lang.String iccTerminalType) {
    return genClient.setOther(iccTerminalType, CacheKey.iccTerminalType);
  }

  /**
   * Sets the field 'iccTvr'.
   */
  public TransactionData setIccTvr(java.lang.String iccTvr) {
    return genClient.setOther(iccTvr, CacheKey.iccTvr);
  }

  /**
   * Sets the field 'iccTransactionDate'.
   */
  public TransactionData setIccTransactionDate(java.lang.String iccTransactionDate) {
    return genClient.setOther(iccTransactionDate, CacheKey.iccTransactionDate);
  }

  /**
   * Sets the field 'iccTsi'.
   */
  public TransactionData setIccTsi(java.lang.String iccTsi) {
    return genClient.setOther(iccTsi, CacheKey.iccTsi);
  }

  /**
   * Sets the field 'iccTransactionType'.
   */
  public TransactionData setIccTransactionType(java.lang.String iccTransactionType) {
    return genClient.setOther(iccTransactionType, CacheKey.iccTransactionType);
  }

  /**
   * Sets the field 'iccUnpredictableNumber'.
   */
  public TransactionData setIccUnpredictableNumber(java.lang.String iccUnpredictableNumber) {
    return genClient.setOther(iccUnpredictableNumber, CacheKey.iccUnpredictableNumber);
  }

  /**
   * Sets the field 'iccTransactionTime'.
   */
  public TransactionData setIccTransactionTime(java.lang.String iccTransactionTime) {
    return genClient.setOther(iccTransactionTime, CacheKey.iccTransactionTime);
  }

  /**
   * Sets the field 'iccAdditionalTerminalCapabilities'.
   */
  public TransactionData setIccAdditionalTerminalCapabilities(java.lang.String iccAdditionalTerminalCapabilities) {
    return genClient.setOther(iccAdditionalTerminalCapabilities, CacheKey.iccAdditionalTerminalCapabilities);
  }

  /**
   * Sets the field 'iccTransactionCategoryCode'.
   */
  public TransactionData setIccTransactionCategoryCode(java.lang.String iccTransactionCategoryCode) {
    return genClient.setOther(iccTransactionCategoryCode, CacheKey.iccTransactionCategoryCode);
  }

  /**
   * Sets the field 'iccIssuerApplicationPreferredName'.
   */
  public TransactionData setIccIssuerApplicationPreferredName(java.lang.String iccIssuerApplicationPreferredName) {
    return genClient.setOther(iccIssuerApplicationPreferredName, CacheKey.iccIssuerApplicationPreferredName);
  }

  /**
   * Sets the field 'iccCardholderName'.
   */
  public TransactionData setIccCardholderName(java.lang.String iccCardholderName) {
    return genClient.setOther(iccCardholderName, CacheKey.iccCardholderName);
  }

  /**
   * Sets the field 'iccIssuerCodeTableIndex'.
   */
  public TransactionData setIccIssuerCodeTableIndex(java.lang.String iccIssuerCodeTableIndex) {
    return genClient.setOther(iccIssuerCodeTableIndex, CacheKey.iccIssuerCodeTableIndex);
  }

  /**
   * Sets the field 'iccIssuerScripts'.
   */
  public TransactionData setIccIssuerScripts(java.lang.String iccIssuerScripts) {
    return genClient.setOther(iccIssuerScripts, CacheKey.iccIssuerScripts);
  }

  /**
   * Sets the field 'iccIssuerScriptResults'.
   */
  public TransactionData setIccIssuerScriptResults(java.lang.String iccIssuerScriptResults) {
    return genClient.setOther(iccIssuerScriptResults, CacheKey.iccIssuerScriptResults);
  }

  /**
   * Sets the field 'debugTrack2EquivalentData'.
   */
  public TransactionData setDebugTrack2EquivalentData(java.lang.String debugTrack2EquivalentData) {
    return genClient.setOther(debugTrack2EquivalentData, CacheKey.debugTrack2EquivalentData);
  }

  /**
   * Sets the field 'debugApplicationPan'.
   */
  public TransactionData setDebugApplicationPan(java.lang.String debugApplicationPan) {
    return genClient.setOther(debugApplicationPan, CacheKey.debugApplicationPan);
  }

  /**
   * Sets the field 'debugAmountAuthorizedBinary'.
   */
  public TransactionData setDebugAmountAuthorizedBinary(java.lang.String debugAmountAuthorizedBinary) {
    return genClient.setOther(debugAmountAuthorizedBinary, CacheKey.debugAmountAuthorizedBinary);
  }

  /**
   * Sets the field 'debugAmountOtherBinary'.
   */
  public TransactionData setDebugAmountOtherBinary(java.lang.String debugAmountOtherBinary) {
    return genClient.setOther(debugAmountOtherBinary, CacheKey.debugAmountOtherBinary);
  }

  /**
   * Sets the field 'debugTransactionStatusInformation'.
   */
  public TransactionData setDebugTransactionStatusInformation(java.lang.String debugTransactionStatusInformation) {
    return genClient.setOther(debugTransactionStatusInformation, CacheKey.debugTransactionStatusInformation);
  }

  /**
   * Sets the field 'debugPlainTrack1'.
   */
  public TransactionData setDebugPlainTrack1(java.lang.String debugPlainTrack1) {
    return genClient.setOther(debugPlainTrack1, CacheKey.debugPlainTrack1);
  }

  /**
   * Sets the field 'debugPlainTrack2'.
   */
  public TransactionData setDebugPlainTrack2(java.lang.String debugPlainTrack2) {
    return genClient.setOther(debugPlainTrack2, CacheKey.debugPlainTrack2);
  }

  /**
   * Sets the field 'schemePunATC'.
   */
  public TransactionData setSchemePunATC(java.lang.String schemePunATC) {
    return genClient.setOther(schemePunATC, CacheKey.schemePunATC);
  }

  /**
   * Sets the field 'schemeThirdPartyData'.
   */
  public TransactionData setSchemeThirdPartyData(java.lang.String schemeThirdPartyData) {
    return genClient.setOther(schemeThirdPartyData, CacheKey.schemeThirdPartyData);
  }

  /**
   * Sets the field 'schemeMerchantCustomData'.
   */
  public TransactionData setSchemeMerchantCustomData(java.lang.String schemeMerchantCustomData) {
    return genClient.setOther(schemeMerchantCustomData, CacheKey.schemeMerchantCustomData);
  }

  /**
   * Sets the field 'schemeTerminalEntryCapability'.
   */
  public TransactionData setSchemeTerminalEntryCapability(java.lang.String schemeTerminalEntryCapability) {
    return genClient.setOther(schemeTerminalEntryCapability, CacheKey.schemeTerminalEntryCapability);
  }

  /**
   * Sets the field 'pinBlockContainer'.
   */
  public TransactionData setPinBlockContainer(java.lang.String pinBlockContainer) {
    return genClient.setOther(pinBlockContainer, CacheKey.pinBlockContainer);
  }

  /**
   * Sets the field 'pinBlock'.
   */
  public TransactionData setPinBlock(java.lang.String pinBlock) {
    return genClient.setOther(pinBlock, CacheKey.pinBlock);
  }

  /**
   * Sets the field 'pinBlockKsn'.
   */
  public TransactionData setPinBlockKsn(java.lang.String pinBlockKsn) {
    return genClient.setOther(pinBlockKsn, CacheKey.pinBlockKsn);
  }

  /**
   * Sets the field 'mac'.
   */
  public TransactionData setMac(java.lang.String mac) {
    return genClient.setOther(mac, CacheKey.mac);
  }

  /**
   * Sets the field 'macKsn'.
   */
  public TransactionData setMacKsn(java.lang.String macKsn) {
    return genClient.setOther(macKsn, CacheKey.macKsn);
  }

  /**
   * Sets the field 'gwContainer'.
   */
  public TransactionData setGwContainer(java.lang.String gwContainer) {
    return genClient.setOther(gwContainer, CacheKey.gwContainer);
  }

  /**
   * Sets the field 'gwIssuerAuthenticationData'.
   */
  public TransactionData setGwIssuerAuthenticationData(java.lang.String gwIssuerAuthenticationData) {
    return genClient.setOther(gwIssuerAuthenticationData, CacheKey.gwIssuerAuthenticationData);
  }

  /**
   * Sets the field 'gwIssuerScriptTemplate1'.
   */
  public TransactionData setGwIssuerScriptTemplate1(java.lang.String gwIssuerScriptTemplate1) {
    return genClient.setOther(gwIssuerScriptTemplate1, CacheKey.gwIssuerScriptTemplate1);
  }

  /**
   * Sets the field 'gwIssuerScriptTemplate2'.
   */
  public TransactionData setGwIssuerScriptTemplate2(java.lang.String gwIssuerScriptTemplate2) {
    return genClient.setOther(gwIssuerScriptTemplate2, CacheKey.gwIssuerScriptTemplate2);
  }

  /**
   * Sets the field 'gwIssuerAuthorizationResponseCode'.
   */
  public TransactionData setGwIssuerAuthorizationResponseCode(java.lang.String gwIssuerAuthorizationResponseCode) {
    return genClient.setOther(gwIssuerAuthorizationResponseCode, CacheKey.gwIssuerAuthorizationResponseCode);
  }

  /**
   * Sets the field 'gwMessageControlField'.
   */
  public TransactionData setGwMessageControlField(java.lang.String gwMessageControlField) {
    return genClient.setOther(gwMessageControlField, CacheKey.gwMessageControlField);
  }

  /**
   * Sets the field 'gwTxResult'.
   */
  public TransactionData setGwTxResult(com.clover.sdk.v3.pay.GwTxResult gwTxResult) {
    return genClient.setOther(gwTxResult, CacheKey.gwTxResult);
  }

  /**
   * Sets the field 'cvmResult'.
   */
  public TransactionData setCvmResult(com.clover.sdk.v3.payments.CvmResult cvmResult) {
    return genClient.setOther(cvmResult, CacheKey.cvmResult);
  }

  /**
   * Sets the field 'serviceCode1'.
   */
  public TransactionData setServiceCode1(com.clover.sdk.v3.pay.ServiceCode1 serviceCode1) {
    return genClient.setOther(serviceCode1, CacheKey.serviceCode1);
  }

  /**
   * Sets the field 'serviceCode2'.
   */
  public TransactionData setServiceCode2(com.clover.sdk.v3.pay.ServiceCode2 serviceCode2) {
    return genClient.setOther(serviceCode2, CacheKey.serviceCode2);
  }

  /**
   * Sets the field 'serviceCode3'.
   */
  public TransactionData setServiceCode3(com.clover.sdk.v3.pay.ServiceCode3 serviceCode3) {
    return genClient.setOther(serviceCode3, CacheKey.serviceCode3);
  }

  /**
   * Sets the field 'offlineApprovalAuthCode'.
   */
  public TransactionData setOfflineApprovalAuthCode(java.lang.String offlineApprovalAuthCode) {
    return genClient.setOther(offlineApprovalAuthCode, CacheKey.offlineApprovalAuthCode);
  }

  /**
   * Sets the field 'availableOfflineSpendingAmount'.
   */
  public TransactionData setAvailableOfflineSpendingAmount(java.lang.Double availableOfflineSpendingAmount) {
    return genClient.setOther(availableOfflineSpendingAmount, CacheKey.availableOfflineSpendingAmount);
  }


  /** Clears the 'txResult' field, the 'has' method for this field will now return false */
  public void clearTxResult() {
    genClient.clear(CacheKey.txResult);
  }
  /** Clears the 'txError' field, the 'has' method for this field will now return false */
  public void clearTxError() {
    genClient.clear(CacheKey.txError);
  }
  /** Clears the 'amount' field, the 'has' method for this field will now return false */
  public void clearAmount() {
    genClient.clear(CacheKey.amount);
  }
  /** Clears the 'tipAmount' field, the 'has' method for this field will now return false */
  public void clearTipAmount() {
    genClient.clear(CacheKey.tipAmount);
  }
  /** Clears the 'cashBackAmount' field, the 'has' method for this field will now return false */
  public void clearCashBackAmount() {
    genClient.clear(CacheKey.cashBackAmount);
  }
  /** Clears the 'errorCode' field, the 'has' method for this field will now return false */
  public void clearErrorCode() {
    genClient.clear(CacheKey.errorCode);
  }
  /** Clears the 'errorText' field, the 'has' method for this field will now return false */
  public void clearErrorText() {
    genClient.clear(CacheKey.errorText);
  }
  /** Clears the 'transactionDate' field, the 'has' method for this field will now return false */
  public void clearTransactionDate() {
    genClient.clear(CacheKey.transactionDate);
  }
  /** Clears the 'transactionTime' field, the 'has' method for this field will now return false */
  public void clearTransactionTime() {
    genClient.clear(CacheKey.transactionTime);
  }
  /** Clears the 'msrContainer' field, the 'has' method for this field will now return false */
  public void clearMsrContainer() {
    genClient.clear(CacheKey.msrContainer);
  }
  /** Clears the 'msrMaskedTrack1' field, the 'has' method for this field will now return false */
  public void clearMsrMaskedTrack1() {
    genClient.clear(CacheKey.msrMaskedTrack1);
  }
  /** Clears the 'msrMaskedTrack2' field, the 'has' method for this field will now return false */
  public void clearMsrMaskedTrack2() {
    genClient.clear(CacheKey.msrMaskedTrack2);
  }
  /** Clears the 'maskedManualPan' field, the 'has' method for this field will now return false */
  public void clearMaskedManualPan() {
    genClient.clear(CacheKey.maskedManualPan);
  }
  /** Clears the 'sredContainer' field, the 'has' method for this field will now return false */
  public void clearSredContainer() {
    genClient.clear(CacheKey.sredContainer);
  }
  /** Clears the 'sred' field, the 'has' method for this field will now return false */
  public void clearSred() {
    genClient.clear(CacheKey.sred);
  }
  /** Clears the 'ksn' field, the 'has' method for this field will now return false */
  public void clearKsn() {
    genClient.clear(CacheKey.ksn);
  }
  /** Clears the 'transArmorContainer' field, the 'has' method for this field will now return false */
  public void clearTransArmorContainer() {
    genClient.clear(CacheKey.transArmorContainer);
  }
  /** Clears the 'transArmorKey' field, the 'has' method for this field will now return false */
  public void clearTransArmorKey() {
    genClient.clear(CacheKey.transArmorKey);
  }
  /** Clears the 'transArmorKeyId' field, the 'has' method for this field will now return false */
  public void clearTransArmorKeyId() {
    genClient.clear(CacheKey.transArmorKeyId);
  }
  /** Clears the 'transArmorEncryptedTrack1' field, the 'has' method for this field will now return false */
  public void clearTransArmorEncryptedTrack1() {
    genClient.clear(CacheKey.transArmorEncryptedTrack1);
  }
  /** Clears the 'transArmorEncryptedTrack2' field, the 'has' method for this field will now return false */
  public void clearTransArmorEncryptedTrack2() {
    genClient.clear(CacheKey.transArmorEncryptedTrack2);
  }
  /** Clears the 'transArmorEncryptedEmvTag57' field, the 'has' method for this field will now return false */
  public void clearTransArmorEncryptedEmvTag57() {
    genClient.clear(CacheKey.transArmorEncryptedEmvTag57);
  }
  /** Clears the 'transArmorEncryptedEmvTag5A' field, the 'has' method for this field will now return false */
  public void clearTransArmorEncryptedEmvTag5A() {
    genClient.clear(CacheKey.transArmorEncryptedEmvTag5A);
  }
  /** Clears the 'transArmorEncryptedManualKeyedData' field, the 'has' method for this field will now return false */
  public void clearTransArmorEncryptedManualKeyedData() {
    genClient.clear(CacheKey.transArmorEncryptedManualKeyedData);
  }
  /** Clears the 'iccContainer' field, the 'has' method for this field will now return false */
  public void clearIccContainer() {
    genClient.clear(CacheKey.iccContainer);
  }
  /** Clears the 'iccApplicationInterchangeProfile' field, the 'has' method for this field will now return false */
  public void clearIccApplicationInterchangeProfile() {
    genClient.clear(CacheKey.iccApplicationInterchangeProfile);
  }
  /** Clears the 'iccMaskedEmv57' field, the 'has' method for this field will now return false */
  public void clearIccMaskedEmv57() {
    genClient.clear(CacheKey.iccMaskedEmv57);
  }
  /** Clears the 'iccMaskedEmv5A' field, the 'has' method for this field will now return false */
  public void clearIccMaskedEmv5A() {
    genClient.clear(CacheKey.iccMaskedEmv5A);
  }
  /** Clears the 'iccApplicationPanSequenceNumber' field, the 'has' method for this field will now return false */
  public void clearIccApplicationPanSequenceNumber() {
    genClient.clear(CacheKey.iccApplicationPanSequenceNumber);
  }
  /** Clears the 'iccApplicationExpirationDate' field, the 'has' method for this field will now return false */
  public void clearIccApplicationExpirationDate() {
    genClient.clear(CacheKey.iccApplicationExpirationDate);
  }
  /** Clears the 'iccApplicationEffectiveDate' field, the 'has' method for this field will now return false */
  public void clearIccApplicationEffectiveDate() {
    genClient.clear(CacheKey.iccApplicationEffectiveDate);
  }
  /** Clears the 'iccAmountAuthorized' field, the 'has' method for this field will now return false */
  public void clearIccAmountAuthorized() {
    genClient.clear(CacheKey.iccAmountAuthorized);
  }
  /** Clears the 'iccAmountOther' field, the 'has' method for this field will now return false */
  public void clearIccAmountOther() {
    genClient.clear(CacheKey.iccAmountOther);
  }
  /** Clears the 'iccTransactionCurrencyCode' field, the 'has' method for this field will now return false */
  public void clearIccTransactionCurrencyCode() {
    genClient.clear(CacheKey.iccTransactionCurrencyCode);
  }
  /** Clears the 'iccTransactionCurrencyExponent' field, the 'has' method for this field will now return false */
  public void clearIccTransactionCurrencyExponent() {
    genClient.clear(CacheKey.iccTransactionCurrencyExponent);
  }
  /** Clears the 'iccApplicationUsageControl' field, the 'has' method for this field will now return false */
  public void clearIccApplicationUsageControl() {
    genClient.clear(CacheKey.iccApplicationUsageControl);
  }
  /** Clears the 'iccIssuerActionCodeDefault' field, the 'has' method for this field will now return false */
  public void clearIccIssuerActionCodeDefault() {
    genClient.clear(CacheKey.iccIssuerActionCodeDefault);
  }
  /** Clears the 'iccIssuerActionCodeDenial' field, the 'has' method for this field will now return false */
  public void clearIccIssuerActionCodeDenial() {
    genClient.clear(CacheKey.iccIssuerActionCodeDenial);
  }
  /** Clears the 'iccIssuerActionCodeOnline' field, the 'has' method for this field will now return false */
  public void clearIccIssuerActionCodeOnline() {
    genClient.clear(CacheKey.iccIssuerActionCodeOnline);
  }
  /** Clears the 'iccApplicationLabel' field, the 'has' method for this field will now return false */
  public void clearIccApplicationLabel() {
    genClient.clear(CacheKey.iccApplicationLabel);
  }
  /** Clears the 'iccApplicationCryptogram' field, the 'has' method for this field will now return false */
  public void clearIccApplicationCryptogram() {
    genClient.clear(CacheKey.iccApplicationCryptogram);
  }
  /** Clears the 'iccApplicationIdentifierCard' field, the 'has' method for this field will now return false */
  public void clearIccApplicationIdentifierCard() {
    genClient.clear(CacheKey.iccApplicationIdentifierCard);
  }
  /** Clears the 'iccApplicationIdentifierTerminal' field, the 'has' method for this field will now return false */
  public void clearIccApplicationIdentifierTerminal() {
    genClient.clear(CacheKey.iccApplicationIdentifierTerminal);
  }
  /** Clears the 'iccApplicationTransactionCounter' field, the 'has' method for this field will now return false */
  public void clearIccApplicationTransactionCounter() {
    genClient.clear(CacheKey.iccApplicationTransactionCounter);
  }
  /** Clears the 'iccApplicationVersionNumber' field, the 'has' method for this field will now return false */
  public void clearIccApplicationVersionNumber() {
    genClient.clear(CacheKey.iccApplicationVersionNumber);
  }
  /** Clears the 'iccCryptogramInformationData' field, the 'has' method for this field will now return false */
  public void clearIccCryptogramInformationData() {
    genClient.clear(CacheKey.iccCryptogramInformationData);
  }
  /** Clears the 'iccCvmResults' field, the 'has' method for this field will now return false */
  public void clearIccCvmResults() {
    genClient.clear(CacheKey.iccCvmResults);
  }
  /** Clears the 'iccInterfaceDeviceSerialNumber' field, the 'has' method for this field will now return false */
  public void clearIccInterfaceDeviceSerialNumber() {
    genClient.clear(CacheKey.iccInterfaceDeviceSerialNumber);
  }
  /** Clears the 'iccIssuerApplicationData' field, the 'has' method for this field will now return false */
  public void clearIccIssuerApplicationData() {
    genClient.clear(CacheKey.iccIssuerApplicationData);
  }
  /** Clears the 'iccPosEntryModeCode' field, the 'has' method for this field will now return false */
  public void clearIccPosEntryModeCode() {
    genClient.clear(CacheKey.iccPosEntryModeCode);
  }
  /** Clears the 'iccTerminalCapabilities' field, the 'has' method for this field will now return false */
  public void clearIccTerminalCapabilities() {
    genClient.clear(CacheKey.iccTerminalCapabilities);
  }
  /** Clears the 'iccTerminalCountryCode' field, the 'has' method for this field will now return false */
  public void clearIccTerminalCountryCode() {
    genClient.clear(CacheKey.iccTerminalCountryCode);
  }
  /** Clears the 'iccTerminalType' field, the 'has' method for this field will now return false */
  public void clearIccTerminalType() {
    genClient.clear(CacheKey.iccTerminalType);
  }
  /** Clears the 'iccTvr' field, the 'has' method for this field will now return false */
  public void clearIccTvr() {
    genClient.clear(CacheKey.iccTvr);
  }
  /** Clears the 'iccTransactionDate' field, the 'has' method for this field will now return false */
  public void clearIccTransactionDate() {
    genClient.clear(CacheKey.iccTransactionDate);
  }
  /** Clears the 'iccTsi' field, the 'has' method for this field will now return false */
  public void clearIccTsi() {
    genClient.clear(CacheKey.iccTsi);
  }
  /** Clears the 'iccTransactionType' field, the 'has' method for this field will now return false */
  public void clearIccTransactionType() {
    genClient.clear(CacheKey.iccTransactionType);
  }
  /** Clears the 'iccUnpredictableNumber' field, the 'has' method for this field will now return false */
  public void clearIccUnpredictableNumber() {
    genClient.clear(CacheKey.iccUnpredictableNumber);
  }
  /** Clears the 'iccTransactionTime' field, the 'has' method for this field will now return false */
  public void clearIccTransactionTime() {
    genClient.clear(CacheKey.iccTransactionTime);
  }
  /** Clears the 'iccAdditionalTerminalCapabilities' field, the 'has' method for this field will now return false */
  public void clearIccAdditionalTerminalCapabilities() {
    genClient.clear(CacheKey.iccAdditionalTerminalCapabilities);
  }
  /** Clears the 'iccTransactionCategoryCode' field, the 'has' method for this field will now return false */
  public void clearIccTransactionCategoryCode() {
    genClient.clear(CacheKey.iccTransactionCategoryCode);
  }
  /** Clears the 'iccIssuerApplicationPreferredName' field, the 'has' method for this field will now return false */
  public void clearIccIssuerApplicationPreferredName() {
    genClient.clear(CacheKey.iccIssuerApplicationPreferredName);
  }
  /** Clears the 'iccCardholderName' field, the 'has' method for this field will now return false */
  public void clearIccCardholderName() {
    genClient.clear(CacheKey.iccCardholderName);
  }
  /** Clears the 'iccIssuerCodeTableIndex' field, the 'has' method for this field will now return false */
  public void clearIccIssuerCodeTableIndex() {
    genClient.clear(CacheKey.iccIssuerCodeTableIndex);
  }
  /** Clears the 'iccIssuerScripts' field, the 'has' method for this field will now return false */
  public void clearIccIssuerScripts() {
    genClient.clear(CacheKey.iccIssuerScripts);
  }
  /** Clears the 'iccIssuerScriptResults' field, the 'has' method for this field will now return false */
  public void clearIccIssuerScriptResults() {
    genClient.clear(CacheKey.iccIssuerScriptResults);
  }
  /** Clears the 'debugTrack2EquivalentData' field, the 'has' method for this field will now return false */
  public void clearDebugTrack2EquivalentData() {
    genClient.clear(CacheKey.debugTrack2EquivalentData);
  }
  /** Clears the 'debugApplicationPan' field, the 'has' method for this field will now return false */
  public void clearDebugApplicationPan() {
    genClient.clear(CacheKey.debugApplicationPan);
  }
  /** Clears the 'debugAmountAuthorizedBinary' field, the 'has' method for this field will now return false */
  public void clearDebugAmountAuthorizedBinary() {
    genClient.clear(CacheKey.debugAmountAuthorizedBinary);
  }
  /** Clears the 'debugAmountOtherBinary' field, the 'has' method for this field will now return false */
  public void clearDebugAmountOtherBinary() {
    genClient.clear(CacheKey.debugAmountOtherBinary);
  }
  /** Clears the 'debugTransactionStatusInformation' field, the 'has' method for this field will now return false */
  public void clearDebugTransactionStatusInformation() {
    genClient.clear(CacheKey.debugTransactionStatusInformation);
  }
  /** Clears the 'debugPlainTrack1' field, the 'has' method for this field will now return false */
  public void clearDebugPlainTrack1() {
    genClient.clear(CacheKey.debugPlainTrack1);
  }
  /** Clears the 'debugPlainTrack2' field, the 'has' method for this field will now return false */
  public void clearDebugPlainTrack2() {
    genClient.clear(CacheKey.debugPlainTrack2);
  }
  /** Clears the 'schemePunATC' field, the 'has' method for this field will now return false */
  public void clearSchemePunATC() {
    genClient.clear(CacheKey.schemePunATC);
  }
  /** Clears the 'schemeThirdPartyData' field, the 'has' method for this field will now return false */
  public void clearSchemeThirdPartyData() {
    genClient.clear(CacheKey.schemeThirdPartyData);
  }
  /** Clears the 'schemeMerchantCustomData' field, the 'has' method for this field will now return false */
  public void clearSchemeMerchantCustomData() {
    genClient.clear(CacheKey.schemeMerchantCustomData);
  }
  /** Clears the 'schemeTerminalEntryCapability' field, the 'has' method for this field will now return false */
  public void clearSchemeTerminalEntryCapability() {
    genClient.clear(CacheKey.schemeTerminalEntryCapability);
  }
  /** Clears the 'pinBlockContainer' field, the 'has' method for this field will now return false */
  public void clearPinBlockContainer() {
    genClient.clear(CacheKey.pinBlockContainer);
  }
  /** Clears the 'pinBlock' field, the 'has' method for this field will now return false */
  public void clearPinBlock() {
    genClient.clear(CacheKey.pinBlock);
  }
  /** Clears the 'pinBlockKsn' field, the 'has' method for this field will now return false */
  public void clearPinBlockKsn() {
    genClient.clear(CacheKey.pinBlockKsn);
  }
  /** Clears the 'mac' field, the 'has' method for this field will now return false */
  public void clearMac() {
    genClient.clear(CacheKey.mac);
  }
  /** Clears the 'macKsn' field, the 'has' method for this field will now return false */
  public void clearMacKsn() {
    genClient.clear(CacheKey.macKsn);
  }
  /** Clears the 'gwContainer' field, the 'has' method for this field will now return false */
  public void clearGwContainer() {
    genClient.clear(CacheKey.gwContainer);
  }
  /** Clears the 'gwIssuerAuthenticationData' field, the 'has' method for this field will now return false */
  public void clearGwIssuerAuthenticationData() {
    genClient.clear(CacheKey.gwIssuerAuthenticationData);
  }
  /** Clears the 'gwIssuerScriptTemplate1' field, the 'has' method for this field will now return false */
  public void clearGwIssuerScriptTemplate1() {
    genClient.clear(CacheKey.gwIssuerScriptTemplate1);
  }
  /** Clears the 'gwIssuerScriptTemplate2' field, the 'has' method for this field will now return false */
  public void clearGwIssuerScriptTemplate2() {
    genClient.clear(CacheKey.gwIssuerScriptTemplate2);
  }
  /** Clears the 'gwIssuerAuthorizationResponseCode' field, the 'has' method for this field will now return false */
  public void clearGwIssuerAuthorizationResponseCode() {
    genClient.clear(CacheKey.gwIssuerAuthorizationResponseCode);
  }
  /** Clears the 'gwMessageControlField' field, the 'has' method for this field will now return false */
  public void clearGwMessageControlField() {
    genClient.clear(CacheKey.gwMessageControlField);
  }
  /** Clears the 'gwTxResult' field, the 'has' method for this field will now return false */
  public void clearGwTxResult() {
    genClient.clear(CacheKey.gwTxResult);
  }
  /** Clears the 'cvmResult' field, the 'has' method for this field will now return false */
  public void clearCvmResult() {
    genClient.clear(CacheKey.cvmResult);
  }
  /** Clears the 'serviceCode1' field, the 'has' method for this field will now return false */
  public void clearServiceCode1() {
    genClient.clear(CacheKey.serviceCode1);
  }
  /** Clears the 'serviceCode2' field, the 'has' method for this field will now return false */
  public void clearServiceCode2() {
    genClient.clear(CacheKey.serviceCode2);
  }
  /** Clears the 'serviceCode3' field, the 'has' method for this field will now return false */
  public void clearServiceCode3() {
    genClient.clear(CacheKey.serviceCode3);
  }
  /** Clears the 'offlineApprovalAuthCode' field, the 'has' method for this field will now return false */
  public void clearOfflineApprovalAuthCode() {
    genClient.clear(CacheKey.offlineApprovalAuthCode);
  }
  /** Clears the 'availableOfflineSpendingAmount' field, the 'has' method for this field will now return false */
  public void clearAvailableOfflineSpendingAmount() {
    genClient.clear(CacheKey.availableOfflineSpendingAmount);
  }


  /**
   * Returns true if this instance has any changes.
   */
  public boolean containsChanges() {
    return genClient.containsChanges();
  }

  /**
   * Reset the log of changes made to this instance, calling copyChanges() after this would return an empty instance.
   */
  public void resetChangeLog() {
    genClient.resetChangeLog();
  }

  /**
   * Create a copy of this instance that contains only fields that were set after the constructor was called.
   */
  public TransactionData copyChanges() {
    TransactionData copy = new TransactionData();
    copy.mergeChanges(this);
    copy.resetChangeLog();
    return copy;
  }

  /**
   * Copy all the changed fields from the given source to this instance.
   */
  public void mergeChanges(TransactionData src) {
    if (src.genClient.getChangeLog() != null) {
      genClient.mergeChanges(new TransactionData(src).getJSONObject(), src.genClient);
    }
  }

  public static final android.os.Parcelable.Creator<TransactionData> CREATOR = new android.os.Parcelable.Creator<TransactionData>() {
    @Override
    public TransactionData createFromParcel(android.os.Parcel in) {
      TransactionData instance = new TransactionData(com.clover.sdk.v3.JsonParcelHelper.ObjectWrapper.CREATOR.createFromParcel(in).unwrap());
      instance.genClient.setBundle(in.readBundle(getClass().getClassLoader()));
      instance.genClient.setChangeLog(in.readBundle());
      return instance;
    }

    @Override
    public TransactionData[] newArray(int size) {
      return new TransactionData[size];
    }
  };

  public static final com.clover.sdk.JSONifiable.Creator<TransactionData> JSON_CREATOR = new com.clover.sdk.JSONifiable.Creator<TransactionData>() {
    public Class<TransactionData> getCreatedClass() {
      return TransactionData.class;
    }

    @Override
    public TransactionData create(org.json.JSONObject jsonObject) {
      return new TransactionData(jsonObject);
    }
  };

  public interface Constraints {
    public static final boolean TXRESULT_IS_REQUIRED = false;
    public static final boolean TXERROR_IS_REQUIRED = false;
    public static final boolean AMOUNT_IS_REQUIRED = false;
    public static final boolean TIPAMOUNT_IS_REQUIRED = false;
    public static final boolean CASHBACKAMOUNT_IS_REQUIRED = false;
    public static final boolean ERRORCODE_IS_REQUIRED = false;
    public static final boolean ERRORTEXT_IS_REQUIRED = false;
    public static final boolean TRANSACTIONDATE_IS_REQUIRED = false;
    public static final boolean TRANSACTIONTIME_IS_REQUIRED = false;
    public static final boolean MSRCONTAINER_IS_REQUIRED = false;
    public static final boolean MSRMASKEDTRACK1_IS_REQUIRED = false;
    public static final boolean MSRMASKEDTRACK2_IS_REQUIRED = false;
    public static final boolean MASKEDMANUALPAN_IS_REQUIRED = false;
    public static final boolean SREDCONTAINER_IS_REQUIRED = false;
    public static final boolean SRED_IS_REQUIRED = false;
    public static final boolean KSN_IS_REQUIRED = false;
    public static final boolean TRANSARMORCONTAINER_IS_REQUIRED = false;
    public static final boolean TRANSARMORKEY_IS_REQUIRED = false;
    public static final boolean TRANSARMORKEYID_IS_REQUIRED = false;
    public static final boolean TRANSARMORENCRYPTEDTRACK1_IS_REQUIRED = false;
    public static final boolean TRANSARMORENCRYPTEDTRACK2_IS_REQUIRED = false;
    public static final boolean TRANSARMORENCRYPTEDEMVTAG57_IS_REQUIRED = false;
    public static final boolean TRANSARMORENCRYPTEDEMVTAG5A_IS_REQUIRED = false;
    public static final boolean TRANSARMORENCRYPTEDMANUALKEYEDDATA_IS_REQUIRED = false;
    public static final boolean ICCCONTAINER_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONINTERCHANGEPROFILE_IS_REQUIRED = false;
    public static final boolean ICCMASKEDEMV57_IS_REQUIRED = false;
    public static final boolean ICCMASKEDEMV5A_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONPANSEQUENCENUMBER_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONEXPIRATIONDATE_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONEFFECTIVEDATE_IS_REQUIRED = false;
    public static final boolean ICCAMOUNTAUTHORIZED_IS_REQUIRED = false;
    public static final boolean ICCAMOUNTOTHER_IS_REQUIRED = false;
    public static final boolean ICCTRANSACTIONCURRENCYCODE_IS_REQUIRED = false;
    public static final boolean ICCTRANSACTIONCURRENCYEXPONENT_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONUSAGECONTROL_IS_REQUIRED = false;
    public static final boolean ICCISSUERACTIONCODEDEFAULT_IS_REQUIRED = false;
    public static final boolean ICCISSUERACTIONCODEDENIAL_IS_REQUIRED = false;
    public static final boolean ICCISSUERACTIONCODEONLINE_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONLABEL_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONCRYPTOGRAM_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONIDENTIFIERCARD_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONIDENTIFIERTERMINAL_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONTRANSACTIONCOUNTER_IS_REQUIRED = false;
    public static final boolean ICCAPPLICATIONVERSIONNUMBER_IS_REQUIRED = false;
    public static final boolean ICCCRYPTOGRAMINFORMATIONDATA_IS_REQUIRED = false;
    public static final boolean ICCCVMRESULTS_IS_REQUIRED = false;
    public static final boolean ICCINTERFACEDEVICESERIALNUMBER_IS_REQUIRED = false;
    public static final boolean ICCISSUERAPPLICATIONDATA_IS_REQUIRED = false;
    public static final boolean ICCPOSENTRYMODECODE_IS_REQUIRED = false;
    public static final boolean ICCTERMINALCAPABILITIES_IS_REQUIRED = false;
    public static final boolean ICCTERMINALCOUNTRYCODE_IS_REQUIRED = false;
    public static final boolean ICCTERMINALTYPE_IS_REQUIRED = false;
    public static final boolean ICCTVR_IS_REQUIRED = false;
    public static final boolean ICCTRANSACTIONDATE_IS_REQUIRED = false;
    public static final boolean ICCTSI_IS_REQUIRED = false;
    public static final boolean ICCTRANSACTIONTYPE_IS_REQUIRED = false;
    public static final boolean ICCUNPREDICTABLENUMBER_IS_REQUIRED = false;
    public static final boolean ICCTRANSACTIONTIME_IS_REQUIRED = false;
    public static final boolean ICCADDITIONALTERMINALCAPABILITIES_IS_REQUIRED = false;
    public static final boolean ICCTRANSACTIONCATEGORYCODE_IS_REQUIRED = false;
    public static final boolean ICCISSUERAPPLICATIONPREFERREDNAME_IS_REQUIRED = false;
    public static final boolean ICCCARDHOLDERNAME_IS_REQUIRED = false;
    public static final boolean ICCISSUERCODETABLEINDEX_IS_REQUIRED = false;
    public static final boolean ICCISSUERSCRIPTS_IS_REQUIRED = false;
    public static final boolean ICCISSUERSCRIPTRESULTS_IS_REQUIRED = false;
    public static final boolean DEBUGTRACK2EQUIVALENTDATA_IS_REQUIRED = false;
    public static final boolean DEBUGAPPLICATIONPAN_IS_REQUIRED = false;
    public static final boolean DEBUGAMOUNTAUTHORIZEDBINARY_IS_REQUIRED = false;
    public static final boolean DEBUGAMOUNTOTHERBINARY_IS_REQUIRED = false;
    public static final boolean DEBUGTRANSACTIONSTATUSINFORMATION_IS_REQUIRED = false;
    public static final boolean DEBUGPLAINTRACK1_IS_REQUIRED = false;
    public static final boolean DEBUGPLAINTRACK2_IS_REQUIRED = false;
    public static final boolean SCHEMEPUNATC_IS_REQUIRED = false;
    public static final boolean SCHEMETHIRDPARTYDATA_IS_REQUIRED = false;
    public static final boolean SCHEMEMERCHANTCUSTOMDATA_IS_REQUIRED = false;
    public static final boolean SCHEMETERMINALENTRYCAPABILITY_IS_REQUIRED = false;
    public static final boolean PINBLOCKCONTAINER_IS_REQUIRED = false;
    public static final boolean PINBLOCK_IS_REQUIRED = false;
    public static final boolean PINBLOCKKSN_IS_REQUIRED = false;
    public static final boolean MAC_IS_REQUIRED = false;
    public static final boolean MACKSN_IS_REQUIRED = false;
    public static final boolean GWCONTAINER_IS_REQUIRED = false;
    public static final boolean GWISSUERAUTHENTICATIONDATA_IS_REQUIRED = false;
    public static final boolean GWISSUERSCRIPTTEMPLATE1_IS_REQUIRED = false;
    public static final boolean GWISSUERSCRIPTTEMPLATE2_IS_REQUIRED = false;
    public static final boolean GWISSUERAUTHORIZATIONRESPONSECODE_IS_REQUIRED = false;
    public static final boolean GWMESSAGECONTROLFIELD_IS_REQUIRED = false;
    public static final boolean GWTXRESULT_IS_REQUIRED = false;
    public static final boolean CVMRESULT_IS_REQUIRED = false;
    public static final boolean SERVICECODE1_IS_REQUIRED = false;
    public static final boolean SERVICECODE2_IS_REQUIRED = false;
    public static final boolean SERVICECODE3_IS_REQUIRED = false;
    public static final boolean OFFLINEAPPROVALAUTHCODE_IS_REQUIRED = false;
    public static final boolean AVAILABLEOFFLINESPENDINGAMOUNT_IS_REQUIRED = false;
  }

}
