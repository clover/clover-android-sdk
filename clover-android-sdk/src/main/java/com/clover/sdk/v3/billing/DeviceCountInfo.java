/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

/*
 * Copyright (C) 2019 Clover Network, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.clover.sdk.v3.billing;

import com.clover.sdk.GenericClient;
import com.clover.sdk.GenericParcelable;

/**
 * This is an auto-generated Clover data object.
 * <p>
 * <h3>Fields</h3>
 * <ul>
 * <li>{@link #getTotalDevices totalDevices}</li>
 * <li>{@link #getNumStations numStations}</li>
 * <li>{@link #getNumMobiles numMobiles}</li>
 * <li>{@link #getNumMinis numMinis}</li>
 * <li>{@link #getNumBayleafs numBayleafs}</li>
 * <li>{@link #getNumBambooleafs numBambooleafs}</li>
 * <li>{@link #getNumGMCs numGMCs}</li>
 * <li>{@link #getNumGoldenoaks numGoldenoaks}</li>
 * </ul>
 */
@SuppressWarnings("all")
public class DeviceCountInfo extends GenericParcelable implements com.clover.sdk.v3.Validator, com.clover.sdk.JSONifiable {

  public java.lang.Long getTotalDevices() {
    return genClient.cacheGet(CacheKey.totalDevices);
  }

  public java.lang.Long getNumStations() {
    return genClient.cacheGet(CacheKey.numStations);
  }

  public java.lang.Long getNumMobiles() {
    return genClient.cacheGet(CacheKey.numMobiles);
  }

  public java.lang.Long getNumMinis() {
    return genClient.cacheGet(CacheKey.numMinis);
  }

  public java.lang.Long getNumBayleafs() {
    return genClient.cacheGet(CacheKey.numBayleafs);
  }

  public java.lang.Long getNumBambooleafs() {
    return genClient.cacheGet(CacheKey.numBambooleafs);
  }

  public java.lang.Long getNumGMCs() {
    return genClient.cacheGet(CacheKey.numGMCs);
  }

  public java.lang.Long getNumGoldenoaks() {
    return genClient.cacheGet(CacheKey.numGoldenoaks);
  }




  private enum CacheKey implements com.clover.sdk.ExtractionStrategyEnum {
    totalDevices
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    numStations
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    numMobiles
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    numMinis
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    numBayleafs
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    numBambooleafs
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    numGMCs
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    numGoldenoaks
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    ;

    private final com.clover.sdk.extractors.ExtractionStrategy extractionStrategy;

    private CacheKey(com.clover.sdk.extractors.ExtractionStrategy s) {
      extractionStrategy = s;
    }

    @Override
    public com.clover.sdk.extractors.ExtractionStrategy getExtractionStrategy() {
      return extractionStrategy;
    }
  }

  private final GenericClient<DeviceCountInfo> genClient;

  /**
   * Constructs a new empty instance.
   */
  public DeviceCountInfo() {
    genClient = new GenericClient<DeviceCountInfo>(this);
  }

  @Override
  protected GenericClient getGenericClient() {
    return genClient;
  }

  /**
   * Constructs a new empty instance.
   */
  protected DeviceCountInfo(boolean noInit) {
    genClient = null;
  }

  /**
   * Constructs a new instance from the given JSON String.
   */
  public DeviceCountInfo(String json) throws IllegalArgumentException {
    this();
    genClient.initJsonObject(json);
  }

  /**
   * Construct a new instance backed by the given JSONObject, the parameter is not copied so changes to it will be
   * reflected in this instance and vice-versa.
   */
  public DeviceCountInfo(org.json.JSONObject jsonObject) {
    this();
    genClient.setJsonObject(jsonObject);
  }

  /**
   * Constructs a new instance that is a deep copy of the source instance. It does not copy the bundle or changelog.
   */
  public DeviceCountInfo(DeviceCountInfo src) {
    this();
    if (src.genClient.getJsonObject() != null) {
      genClient.setJsonObject(com.clover.sdk.v3.JsonHelper.deepCopy(src.genClient.getJSONObject()));
    }
  }

  /**
   * Returns the internal JSONObject backing this instance, the return value is not a copy so changes to it will be
   * reflected in this instance and vice-versa.
   */
  public org.json.JSONObject getJSONObject() {
    return genClient.getJSONObject();
  }

  @Override
  public void validate() {
  }

  /** Checks whether the 'totalDevices' field is set and is not null */
  public boolean isNotNullTotalDevices() {
    return genClient.cacheValueIsNotNull(CacheKey.totalDevices);
  }

  /** Checks whether the 'numStations' field is set and is not null */
  public boolean isNotNullNumStations() {
    return genClient.cacheValueIsNotNull(CacheKey.numStations);
  }

  /** Checks whether the 'numMobiles' field is set and is not null */
  public boolean isNotNullNumMobiles() {
    return genClient.cacheValueIsNotNull(CacheKey.numMobiles);
  }

  /** Checks whether the 'numMinis' field is set and is not null */
  public boolean isNotNullNumMinis() {
    return genClient.cacheValueIsNotNull(CacheKey.numMinis);
  }

  /** Checks whether the 'numBayleafs' field is set and is not null */
  public boolean isNotNullNumBayleafs() {
    return genClient.cacheValueIsNotNull(CacheKey.numBayleafs);
  }

  /** Checks whether the 'numBambooleafs' field is set and is not null */
  public boolean isNotNullNumBambooleafs() {
    return genClient.cacheValueIsNotNull(CacheKey.numBambooleafs);
  }

  /** Checks whether the 'numGMCs' field is set and is not null */
  public boolean isNotNullNumGMCs() {
    return genClient.cacheValueIsNotNull(CacheKey.numGMCs);
  }

  /** Checks whether the 'numGoldenoaks' field is set and is not null */
  public boolean isNotNullNumGoldenoaks() {
    return genClient.cacheValueIsNotNull(CacheKey.numGoldenoaks);
  }



  /** Checks whether the 'totalDevices' field has been set, however the value could be null */
  public boolean hasTotalDevices() {
    return genClient.cacheHasKey(CacheKey.totalDevices);
  }

  /** Checks whether the 'numStations' field has been set, however the value could be null */
  public boolean hasNumStations() {
    return genClient.cacheHasKey(CacheKey.numStations);
  }

  /** Checks whether the 'numMobiles' field has been set, however the value could be null */
  public boolean hasNumMobiles() {
    return genClient.cacheHasKey(CacheKey.numMobiles);
  }

  /** Checks whether the 'numMinis' field has been set, however the value could be null */
  public boolean hasNumMinis() {
    return genClient.cacheHasKey(CacheKey.numMinis);
  }

  /** Checks whether the 'numBayleafs' field has been set, however the value could be null */
  public boolean hasNumBayleafs() {
    return genClient.cacheHasKey(CacheKey.numBayleafs);
  }

  /** Checks whether the 'numBambooleafs' field has been set, however the value could be null */
  public boolean hasNumBambooleafs() {
    return genClient.cacheHasKey(CacheKey.numBambooleafs);
  }

  /** Checks whether the 'numGMCs' field has been set, however the value could be null */
  public boolean hasNumGMCs() {
    return genClient.cacheHasKey(CacheKey.numGMCs);
  }

  /** Checks whether the 'numGoldenoaks' field has been set, however the value could be null */
  public boolean hasNumGoldenoaks() {
    return genClient.cacheHasKey(CacheKey.numGoldenoaks);
  }


  /**
   * Sets the field 'totalDevices'.
   */
  public DeviceCountInfo setTotalDevices(java.lang.Long totalDevices) {
    return genClient.setOther(totalDevices, CacheKey.totalDevices);
  }

  /**
   * Sets the field 'numStations'.
   */
  public DeviceCountInfo setNumStations(java.lang.Long numStations) {
    return genClient.setOther(numStations, CacheKey.numStations);
  }

  /**
   * Sets the field 'numMobiles'.
   */
  public DeviceCountInfo setNumMobiles(java.lang.Long numMobiles) {
    return genClient.setOther(numMobiles, CacheKey.numMobiles);
  }

  /**
   * Sets the field 'numMinis'.
   */
  public DeviceCountInfo setNumMinis(java.lang.Long numMinis) {
    return genClient.setOther(numMinis, CacheKey.numMinis);
  }

  /**
   * Sets the field 'numBayleafs'.
   */
  public DeviceCountInfo setNumBayleafs(java.lang.Long numBayleafs) {
    return genClient.setOther(numBayleafs, CacheKey.numBayleafs);
  }

  /**
   * Sets the field 'numBambooleafs'.
   */
  public DeviceCountInfo setNumBambooleafs(java.lang.Long numBambooleafs) {
    return genClient.setOther(numBambooleafs, CacheKey.numBambooleafs);
  }

  /**
   * Sets the field 'numGMCs'.
   */
  public DeviceCountInfo setNumGMCs(java.lang.Long numGMCs) {
    return genClient.setOther(numGMCs, CacheKey.numGMCs);
  }

  /**
   * Sets the field 'numGoldenoaks'.
   */
  public DeviceCountInfo setNumGoldenoaks(java.lang.Long numGoldenoaks) {
    return genClient.setOther(numGoldenoaks, CacheKey.numGoldenoaks);
  }


  /** Clears the 'totalDevices' field, the 'has' method for this field will now return false */
  public void clearTotalDevices() {
    genClient.clear(CacheKey.totalDevices);
  }
  /** Clears the 'numStations' field, the 'has' method for this field will now return false */
  public void clearNumStations() {
    genClient.clear(CacheKey.numStations);
  }
  /** Clears the 'numMobiles' field, the 'has' method for this field will now return false */
  public void clearNumMobiles() {
    genClient.clear(CacheKey.numMobiles);
  }
  /** Clears the 'numMinis' field, the 'has' method for this field will now return false */
  public void clearNumMinis() {
    genClient.clear(CacheKey.numMinis);
  }
  /** Clears the 'numBayleafs' field, the 'has' method for this field will now return false */
  public void clearNumBayleafs() {
    genClient.clear(CacheKey.numBayleafs);
  }
  /** Clears the 'numBambooleafs' field, the 'has' method for this field will now return false */
  public void clearNumBambooleafs() {
    genClient.clear(CacheKey.numBambooleafs);
  }
  /** Clears the 'numGMCs' field, the 'has' method for this field will now return false */
  public void clearNumGMCs() {
    genClient.clear(CacheKey.numGMCs);
  }
  /** Clears the 'numGoldenoaks' field, the 'has' method for this field will now return false */
  public void clearNumGoldenoaks() {
    genClient.clear(CacheKey.numGoldenoaks);
  }


  /**
   * Returns true if this instance has any changes.
   */
  public boolean containsChanges() {
    return genClient.containsChanges();
  }

  /**
   * Reset the log of changes made to this instance, calling copyChanges() after this would return an empty instance.
   */
  public void resetChangeLog() {
    genClient.resetChangeLog();
  }

  /**
   * Create a copy of this instance that contains only fields that were set after the constructor was called.
   */
  public DeviceCountInfo copyChanges() {
    DeviceCountInfo copy = new DeviceCountInfo();
    copy.mergeChanges(this);
    copy.resetChangeLog();
    return copy;
  }

  /**
   * Copy all the changed fields from the given source to this instance.
   */
  public void mergeChanges(DeviceCountInfo src) {
    if (src.genClient.getChangeLog() != null) {
      genClient.mergeChanges(new DeviceCountInfo(src).getJSONObject(), src.genClient);
    }
  }

  public static final android.os.Parcelable.Creator<DeviceCountInfo> CREATOR = new android.os.Parcelable.Creator<DeviceCountInfo>() {
    @Override
    public DeviceCountInfo createFromParcel(android.os.Parcel in) {
      DeviceCountInfo instance = new DeviceCountInfo(com.clover.sdk.v3.JsonParcelHelper.ObjectWrapper.CREATOR.createFromParcel(in).unwrap());
      instance.genClient.setBundle(in.readBundle(getClass().getClassLoader()));
      instance.genClient.setChangeLog(in.readBundle());
      return instance;
    }

    @Override
    public DeviceCountInfo[] newArray(int size) {
      return new DeviceCountInfo[size];
    }
  };

  public static final com.clover.sdk.JSONifiable.Creator<DeviceCountInfo> JSON_CREATOR = new com.clover.sdk.JSONifiable.Creator<DeviceCountInfo>() {
    public Class<DeviceCountInfo> getCreatedClass() {
      return DeviceCountInfo.class;
    }

    @Override
    public DeviceCountInfo create(org.json.JSONObject jsonObject) {
      return new DeviceCountInfo(jsonObject);
    }
  };

  public interface Constraints {
    public static final boolean TOTALDEVICES_IS_REQUIRED = false;
    public static final boolean NUMSTATIONS_IS_REQUIRED = false;
    public static final boolean NUMMOBILES_IS_REQUIRED = false;
    public static final boolean NUMMINIS_IS_REQUIRED = false;
    public static final boolean NUMBAYLEAFS_IS_REQUIRED = false;
    public static final boolean NUMBAMBOOLEAFS_IS_REQUIRED = false;
    public static final boolean NUMGMCS_IS_REQUIRED = false;
    public static final boolean NUMGOLDENOAKS_IS_REQUIRED = false;
  }

}
