/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

/*
 * Copyright (C) 2019 Clover Network, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.clover.sdk.v3.payments;

import com.clover.sdk.GenericClient;
import com.clover.sdk.GenericParcelable;

/**
 * This is an auto-generated Clover data object.
 * <p>
 * <h3>Fields</h3>
 * <ul>
 * <li>{@link #getCardTrack2 cardTrack2}</li>
 * <li>{@link #getCardSequenceNumber cardSequenceNumber}</li>
 * <li>{@link #getTransactionCaseGermany transactionCaseGermany}</li>
 * <li>{@link #getTransactionTypeGermany transactionTypeGermany}</li>
 * <li>{@link #getTerminalID terminalID}</li>
 * <li>{@link #getTraceNumber traceNumber}</li>
 * <li>{@link #getOldTraceNumber oldTraceNumber}</li>
 * <li>{@link #getReceiptNumber receiptNumber}</li>
 * <li>{@link #getTransactionAID transactionAID}</li>
 * <li>{@link #getTransactionMSApp transactionMSApp}</li>
 * <li>{@link #getTransactionScriptResults transactionScriptResults}</li>
 * <li>{@link #getReceiptType receiptType}</li>
 * <li>{@link #getCustomerTransactionDOLValues customerTransactionDOLValues}</li>
 * <li>{@link #getMerchantTransactionDOLValues merchantTransactionDOLValues}</li>
 * <li>{@link #getMerchantJournalDOL merchantJournalDOL}</li>
 * <li>{@link #getMerchantJournalDOLValues merchantJournalDOLValues}</li>
 * <li>{@link #getConfigMerchantId configMerchantId}</li>
 * <li>{@link #getConfigProductLabel configProductLabel}</li>
 * <li>{@link #getHostResponseAidParBMP53 hostResponseAidParBMP53}</li>
 * <li>{@link #getHostResponsePrintDataBM60 hostResponsePrintDataBM60}</li>
 * <li>{@link #getSepaElvReceiptFormat sepaElvReceiptFormat}</li>
 * <li>{@link #getSepaElvExtAppLabel sepaElvExtAppLabel}</li>
 * <li>{@link #getSepaElvPreNotification sepaElvPreNotification}</li>
 * <li>{@link #getSepaElvMandate sepaElvMandate}</li>
 * <li>{@link #getSepaElvCreditorId sepaElvCreditorId}</li>
 * <li>{@link #getSepaElvMandateId sepaElvMandateId}</li>
 * <li>{@link #getSepaElvIban sepaElvIban}</li>
 * </ul>
 */
@SuppressWarnings("all")
public class GermanInfo extends GenericParcelable implements com.clover.sdk.v3.Validator, com.clover.sdk.JSONifiable {

  public java.lang.String getCardTrack2() {
    return genClient.cacheGet(CacheKey.cardTrack2);
  }

  public java.lang.String getCardSequenceNumber() {
    return genClient.cacheGet(CacheKey.cardSequenceNumber);
  }

  public java.lang.String getTransactionCaseGermany() {
    return genClient.cacheGet(CacheKey.transactionCaseGermany);
  }

  public java.lang.String getTransactionTypeGermany() {
    return genClient.cacheGet(CacheKey.transactionTypeGermany);
  }

  public java.lang.String getTerminalID() {
    return genClient.cacheGet(CacheKey.terminalID);
  }

  public java.lang.String getTraceNumber() {
    return genClient.cacheGet(CacheKey.traceNumber);
  }

  public java.lang.String getOldTraceNumber() {
    return genClient.cacheGet(CacheKey.oldTraceNumber);
  }

  public java.lang.String getReceiptNumber() {
    return genClient.cacheGet(CacheKey.receiptNumber);
  }

  public java.lang.String getTransactionAID() {
    return genClient.cacheGet(CacheKey.transactionAID);
  }

  public java.lang.String getTransactionMSApp() {
    return genClient.cacheGet(CacheKey.transactionMSApp);
  }

  public java.lang.String getTransactionScriptResults() {
    return genClient.cacheGet(CacheKey.transactionScriptResults);
  }

  public java.lang.String getReceiptType() {
    return genClient.cacheGet(CacheKey.receiptType);
  }

  public java.lang.String getCustomerTransactionDOLValues() {
    return genClient.cacheGet(CacheKey.customerTransactionDOLValues);
  }

  public java.lang.String getMerchantTransactionDOLValues() {
    return genClient.cacheGet(CacheKey.merchantTransactionDOLValues);
  }

  public java.lang.String getMerchantJournalDOL() {
    return genClient.cacheGet(CacheKey.merchantJournalDOL);
  }

  public java.lang.String getMerchantJournalDOLValues() {
    return genClient.cacheGet(CacheKey.merchantJournalDOLValues);
  }

  public java.lang.String getConfigMerchantId() {
    return genClient.cacheGet(CacheKey.configMerchantId);
  }

  public java.lang.String getConfigProductLabel() {
    return genClient.cacheGet(CacheKey.configProductLabel);
  }

  public java.lang.String getHostResponseAidParBMP53() {
    return genClient.cacheGet(CacheKey.hostResponseAidParBMP53);
  }

  public java.lang.String getHostResponsePrintDataBM60() {
    return genClient.cacheGet(CacheKey.hostResponsePrintDataBM60);
  }

  public java.lang.String getSepaElvReceiptFormat() {
    return genClient.cacheGet(CacheKey.sepaElvReceiptFormat);
  }

  public java.lang.String getSepaElvExtAppLabel() {
    return genClient.cacheGet(CacheKey.sepaElvExtAppLabel);
  }

  public java.lang.String getSepaElvPreNotification() {
    return genClient.cacheGet(CacheKey.sepaElvPreNotification);
  }

  public java.lang.String getSepaElvMandate() {
    return genClient.cacheGet(CacheKey.sepaElvMandate);
  }

  public java.lang.String getSepaElvCreditorId() {
    return genClient.cacheGet(CacheKey.sepaElvCreditorId);
  }

  public java.lang.String getSepaElvMandateId() {
    return genClient.cacheGet(CacheKey.sepaElvMandateId);
  }

  public java.lang.String getSepaElvIban() {
    return genClient.cacheGet(CacheKey.sepaElvIban);
  }




  private enum CacheKey implements com.clover.sdk.ExtractionStrategyEnum {
    cardTrack2
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    cardSequenceNumber
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transactionCaseGermany
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transactionTypeGermany
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    terminalID
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    traceNumber
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    oldTraceNumber
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    receiptNumber
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transactionAID
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transactionMSApp
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    transactionScriptResults
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    receiptType
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    customerTransactionDOLValues
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    merchantTransactionDOLValues
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    merchantJournalDOL
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    merchantJournalDOLValues
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    configMerchantId
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    configProductLabel
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    hostResponseAidParBMP53
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    hostResponsePrintDataBM60
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sepaElvReceiptFormat
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sepaElvExtAppLabel
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sepaElvPreNotification
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sepaElvMandate
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sepaElvCreditorId
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sepaElvMandateId
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    sepaElvIban
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
      ;

    private final com.clover.sdk.extractors.ExtractionStrategy extractionStrategy;

    private CacheKey(com.clover.sdk.extractors.ExtractionStrategy s) {
      extractionStrategy = s;
    }

    @Override
    public com.clover.sdk.extractors.ExtractionStrategy getExtractionStrategy() {
      return extractionStrategy;
    }
  }

  private final GenericClient<GermanInfo> genClient;

  /**
   * Constructs a new empty instance.
   */
  public GermanInfo() {
    genClient = new GenericClient<GermanInfo>(this);
  }

  @Override
  protected GenericClient getGenericClient() {
    return genClient;
  }

  /**
   * Constructs a new empty instance.
   */
  protected GermanInfo(boolean noInit) {
    genClient = null;
  }

  /**
   * Constructs a new instance from the given JSON String.
   */
  public GermanInfo(String json) throws IllegalArgumentException {
    this();
    genClient.initJsonObject(json);
  }

  /**
   * Construct a new instance backed by the given JSONObject, the parameter is not copied so changes to it will be
   * reflected in this instance and vice-versa.
   */
  public GermanInfo(org.json.JSONObject jsonObject) {
    this();
    genClient.setJsonObject(jsonObject);
  }

  /**
   * Constructs a new instance that is a deep copy of the source instance. It does not copy the bundle or changelog.
   */
  public GermanInfo(GermanInfo src) {
    this();
    if (src.genClient.getJsonObject() != null) {
      genClient.setJsonObject(com.clover.sdk.v3.JsonHelper.deepCopy(src.genClient.getJSONObject()));
    }
  }

  /**
   * Returns the internal JSONObject backing this instance, the return value is not a copy so changes to it will be
   * reflected in this instance and vice-versa.
   */
  public org.json.JSONObject getJSONObject() {
    return genClient.getJSONObject();
  }

  @Override
  public void validate() {
  }

  /** Checks whether the 'cardTrack2' field is set and is not null */
  public boolean isNotNullCardTrack2() {
    return genClient.cacheValueIsNotNull(CacheKey.cardTrack2);
  }

  /** Checks whether the 'cardSequenceNumber' field is set and is not null */
  public boolean isNotNullCardSequenceNumber() {
    return genClient.cacheValueIsNotNull(CacheKey.cardSequenceNumber);
  }

  /** Checks whether the 'transactionCaseGermany' field is set and is not null */
  public boolean isNotNullTransactionCaseGermany() {
    return genClient.cacheValueIsNotNull(CacheKey.transactionCaseGermany);
  }

  /** Checks whether the 'transactionTypeGermany' field is set and is not null */
  public boolean isNotNullTransactionTypeGermany() {
    return genClient.cacheValueIsNotNull(CacheKey.transactionTypeGermany);
  }

  /** Checks whether the 'terminalID' field is set and is not null */
  public boolean isNotNullTerminalID() {
    return genClient.cacheValueIsNotNull(CacheKey.terminalID);
  }

  /** Checks whether the 'traceNumber' field is set and is not null */
  public boolean isNotNullTraceNumber() {
    return genClient.cacheValueIsNotNull(CacheKey.traceNumber);
  }

  /** Checks whether the 'oldTraceNumber' field is set and is not null */
  public boolean isNotNullOldTraceNumber() {
    return genClient.cacheValueIsNotNull(CacheKey.oldTraceNumber);
  }

  /** Checks whether the 'receiptNumber' field is set and is not null */
  public boolean isNotNullReceiptNumber() {
    return genClient.cacheValueIsNotNull(CacheKey.receiptNumber);
  }

  /** Checks whether the 'transactionAID' field is set and is not null */
  public boolean isNotNullTransactionAID() {
    return genClient.cacheValueIsNotNull(CacheKey.transactionAID);
  }

  /** Checks whether the 'transactionMSApp' field is set and is not null */
  public boolean isNotNullTransactionMSApp() {
    return genClient.cacheValueIsNotNull(CacheKey.transactionMSApp);
  }

  /** Checks whether the 'transactionScriptResults' field is set and is not null */
  public boolean isNotNullTransactionScriptResults() {
    return genClient.cacheValueIsNotNull(CacheKey.transactionScriptResults);
  }

  /** Checks whether the 'receiptType' field is set and is not null */
  public boolean isNotNullReceiptType() {
    return genClient.cacheValueIsNotNull(CacheKey.receiptType);
  }

  /** Checks whether the 'customerTransactionDOLValues' field is set and is not null */
  public boolean isNotNullCustomerTransactionDOLValues() {
    return genClient.cacheValueIsNotNull(CacheKey.customerTransactionDOLValues);
  }

  /** Checks whether the 'merchantTransactionDOLValues' field is set and is not null */
  public boolean isNotNullMerchantTransactionDOLValues() {
    return genClient.cacheValueIsNotNull(CacheKey.merchantTransactionDOLValues);
  }

  /** Checks whether the 'merchantJournalDOL' field is set and is not null */
  public boolean isNotNullMerchantJournalDOL() {
    return genClient.cacheValueIsNotNull(CacheKey.merchantJournalDOL);
  }

  /** Checks whether the 'merchantJournalDOLValues' field is set and is not null */
  public boolean isNotNullMerchantJournalDOLValues() {
    return genClient.cacheValueIsNotNull(CacheKey.merchantJournalDOLValues);
  }

  /** Checks whether the 'configMerchantId' field is set and is not null */
  public boolean isNotNullConfigMerchantId() {
    return genClient.cacheValueIsNotNull(CacheKey.configMerchantId);
  }

  /** Checks whether the 'configProductLabel' field is set and is not null */
  public boolean isNotNullConfigProductLabel() {
    return genClient.cacheValueIsNotNull(CacheKey.configProductLabel);
  }

  /** Checks whether the 'hostResponseAidParBMP53' field is set and is not null */
  public boolean isNotNullHostResponseAidParBMP53() {
    return genClient.cacheValueIsNotNull(CacheKey.hostResponseAidParBMP53);
  }

  /** Checks whether the 'hostResponsePrintDataBM60' field is set and is not null */
  public boolean isNotNullHostResponsePrintDataBM60() {
    return genClient.cacheValueIsNotNull(CacheKey.hostResponsePrintDataBM60);
  }

  /** Checks whether the 'sepaElvReceiptFormat' field is set and is not null */
  public boolean isNotNullSepaElvReceiptFormat() {
    return genClient.cacheValueIsNotNull(CacheKey.sepaElvReceiptFormat);
  }

  /** Checks whether the 'sepaElvExtAppLabel' field is set and is not null */
  public boolean isNotNullSepaElvExtAppLabel() {
    return genClient.cacheValueIsNotNull(CacheKey.sepaElvExtAppLabel);
  }

  /** Checks whether the 'sepaElvPreNotification' field is set and is not null */
  public boolean isNotNullSepaElvPreNotification() {
    return genClient.cacheValueIsNotNull(CacheKey.sepaElvPreNotification);
  }

  /** Checks whether the 'sepaElvMandate' field is set and is not null */
  public boolean isNotNullSepaElvMandate() {
    return genClient.cacheValueIsNotNull(CacheKey.sepaElvMandate);
  }

  /** Checks whether the 'sepaElvCreditorId' field is set and is not null */
  public boolean isNotNullSepaElvCreditorId() {
    return genClient.cacheValueIsNotNull(CacheKey.sepaElvCreditorId);
  }

  /** Checks whether the 'sepaElvMandateId' field is set and is not null */
  public boolean isNotNullSepaElvMandateId() {
    return genClient.cacheValueIsNotNull(CacheKey.sepaElvMandateId);
  }

  /** Checks whether the 'sepaElvIban' field is set and is not null */
  public boolean isNotNullSepaElvIban() {
    return genClient.cacheValueIsNotNull(CacheKey.sepaElvIban);
  }



  /** Checks whether the 'cardTrack2' field has been set, however the value could be null */
  public boolean hasCardTrack2() {
    return genClient.cacheHasKey(CacheKey.cardTrack2);
  }

  /** Checks whether the 'cardSequenceNumber' field has been set, however the value could be null */
  public boolean hasCardSequenceNumber() {
    return genClient.cacheHasKey(CacheKey.cardSequenceNumber);
  }

  /** Checks whether the 'transactionCaseGermany' field has been set, however the value could be null */
  public boolean hasTransactionCaseGermany() {
    return genClient.cacheHasKey(CacheKey.transactionCaseGermany);
  }

  /** Checks whether the 'transactionTypeGermany' field has been set, however the value could be null */
  public boolean hasTransactionTypeGermany() {
    return genClient.cacheHasKey(CacheKey.transactionTypeGermany);
  }

  /** Checks whether the 'terminalID' field has been set, however the value could be null */
  public boolean hasTerminalID() {
    return genClient.cacheHasKey(CacheKey.terminalID);
  }

  /** Checks whether the 'traceNumber' field has been set, however the value could be null */
  public boolean hasTraceNumber() {
    return genClient.cacheHasKey(CacheKey.traceNumber);
  }

  /** Checks whether the 'oldTraceNumber' field has been set, however the value could be null */
  public boolean hasOldTraceNumber() {
    return genClient.cacheHasKey(CacheKey.oldTraceNumber);
  }

  /** Checks whether the 'receiptNumber' field has been set, however the value could be null */
  public boolean hasReceiptNumber() {
    return genClient.cacheHasKey(CacheKey.receiptNumber);
  }

  /** Checks whether the 'transactionAID' field has been set, however the value could be null */
  public boolean hasTransactionAID() {
    return genClient.cacheHasKey(CacheKey.transactionAID);
  }

  /** Checks whether the 'transactionMSApp' field has been set, however the value could be null */
  public boolean hasTransactionMSApp() {
    return genClient.cacheHasKey(CacheKey.transactionMSApp);
  }

  /** Checks whether the 'transactionScriptResults' field has been set, however the value could be null */
  public boolean hasTransactionScriptResults() {
    return genClient.cacheHasKey(CacheKey.transactionScriptResults);
  }

  /** Checks whether the 'receiptType' field has been set, however the value could be null */
  public boolean hasReceiptType() {
    return genClient.cacheHasKey(CacheKey.receiptType);
  }

  /** Checks whether the 'customerTransactionDOLValues' field has been set, however the value could be null */
  public boolean hasCustomerTransactionDOLValues() {
    return genClient.cacheHasKey(CacheKey.customerTransactionDOLValues);
  }

  /** Checks whether the 'merchantTransactionDOLValues' field has been set, however the value could be null */
  public boolean hasMerchantTransactionDOLValues() {
    return genClient.cacheHasKey(CacheKey.merchantTransactionDOLValues);
  }

  /** Checks whether the 'merchantJournalDOL' field has been set, however the value could be null */
  public boolean hasMerchantJournalDOL() {
    return genClient.cacheHasKey(CacheKey.merchantJournalDOL);
  }

  /** Checks whether the 'merchantJournalDOLValues' field has been set, however the value could be null */
  public boolean hasMerchantJournalDOLValues() {
    return genClient.cacheHasKey(CacheKey.merchantJournalDOLValues);
  }

  /** Checks whether the 'configMerchantId' field has been set, however the value could be null */
  public boolean hasConfigMerchantId() {
    return genClient.cacheHasKey(CacheKey.configMerchantId);
  }

  /** Checks whether the 'configProductLabel' field has been set, however the value could be null */
  public boolean hasConfigProductLabel() {
    return genClient.cacheHasKey(CacheKey.configProductLabel);
  }

  /** Checks whether the 'hostResponseAidParBMP53' field has been set, however the value could be null */
  public boolean hasHostResponseAidParBMP53() {
    return genClient.cacheHasKey(CacheKey.hostResponseAidParBMP53);
  }

  /** Checks whether the 'hostResponsePrintDataBM60' field has been set, however the value could be null */
  public boolean hasHostResponsePrintDataBM60() {
    return genClient.cacheHasKey(CacheKey.hostResponsePrintDataBM60);
  }

  /** Checks whether the 'sepaElvReceiptFormat' field has been set, however the value could be null */
  public boolean hasSepaElvReceiptFormat() {
    return genClient.cacheHasKey(CacheKey.sepaElvReceiptFormat);
  }

  /** Checks whether the 'sepaElvExtAppLabel' field has been set, however the value could be null */
  public boolean hasSepaElvExtAppLabel() {
    return genClient.cacheHasKey(CacheKey.sepaElvExtAppLabel);
  }

  /** Checks whether the 'sepaElvPreNotification' field has been set, however the value could be null */
  public boolean hasSepaElvPreNotification() {
    return genClient.cacheHasKey(CacheKey.sepaElvPreNotification);
  }

  /** Checks whether the 'sepaElvMandate' field has been set, however the value could be null */
  public boolean hasSepaElvMandate() {
    return genClient.cacheHasKey(CacheKey.sepaElvMandate);
  }

  /** Checks whether the 'sepaElvCreditorId' field has been set, however the value could be null */
  public boolean hasSepaElvCreditorId() {
    return genClient.cacheHasKey(CacheKey.sepaElvCreditorId);
  }

  /** Checks whether the 'sepaElvMandateId' field has been set, however the value could be null */
  public boolean hasSepaElvMandateId() {
    return genClient.cacheHasKey(CacheKey.sepaElvMandateId);
  }

  /** Checks whether the 'sepaElvIban' field has been set, however the value could be null */
  public boolean hasSepaElvIban() {
    return genClient.cacheHasKey(CacheKey.sepaElvIban);
  }


  /**
   * Sets the field 'cardTrack2'.
   */
  public GermanInfo setCardTrack2(java.lang.String cardTrack2) {
    return genClient.setOther(cardTrack2, CacheKey.cardTrack2);
  }

  /**
   * Sets the field 'cardSequenceNumber'.
   */
  public GermanInfo setCardSequenceNumber(java.lang.String cardSequenceNumber) {
    return genClient.setOther(cardSequenceNumber, CacheKey.cardSequenceNumber);
  }

  /**
   * Sets the field 'transactionCaseGermany'.
   */
  public GermanInfo setTransactionCaseGermany(java.lang.String transactionCaseGermany) {
    return genClient.setOther(transactionCaseGermany, CacheKey.transactionCaseGermany);
  }

  /**
   * Sets the field 'transactionTypeGermany'.
   */
  public GermanInfo setTransactionTypeGermany(java.lang.String transactionTypeGermany) {
    return genClient.setOther(transactionTypeGermany, CacheKey.transactionTypeGermany);
  }

  /**
   * Sets the field 'terminalID'.
   */
  public GermanInfo setTerminalID(java.lang.String terminalID) {
    return genClient.setOther(terminalID, CacheKey.terminalID);
  }

  /**
   * Sets the field 'traceNumber'.
   */
  public GermanInfo setTraceNumber(java.lang.String traceNumber) {
    return genClient.setOther(traceNumber, CacheKey.traceNumber);
  }

  /**
   * Sets the field 'oldTraceNumber'.
   */
  public GermanInfo setOldTraceNumber(java.lang.String oldTraceNumber) {
    return genClient.setOther(oldTraceNumber, CacheKey.oldTraceNumber);
  }

  /**
   * Sets the field 'receiptNumber'.
   */
  public GermanInfo setReceiptNumber(java.lang.String receiptNumber) {
    return genClient.setOther(receiptNumber, CacheKey.receiptNumber);
  }

  /**
   * Sets the field 'transactionAID'.
   */
  public GermanInfo setTransactionAID(java.lang.String transactionAID) {
    return genClient.setOther(transactionAID, CacheKey.transactionAID);
  }

  /**
   * Sets the field 'transactionMSApp'.
   */
  public GermanInfo setTransactionMSApp(java.lang.String transactionMSApp) {
    return genClient.setOther(transactionMSApp, CacheKey.transactionMSApp);
  }

  /**
   * Sets the field 'transactionScriptResults'.
   */
  public GermanInfo setTransactionScriptResults(java.lang.String transactionScriptResults) {
    return genClient.setOther(transactionScriptResults, CacheKey.transactionScriptResults);
  }

  /**
   * Sets the field 'receiptType'.
   */
  public GermanInfo setReceiptType(java.lang.String receiptType) {
    return genClient.setOther(receiptType, CacheKey.receiptType);
  }

  /**
   * Sets the field 'customerTransactionDOLValues'.
   */
  public GermanInfo setCustomerTransactionDOLValues(java.lang.String customerTransactionDOLValues) {
    return genClient.setOther(customerTransactionDOLValues, CacheKey.customerTransactionDOLValues);
  }

  /**
   * Sets the field 'merchantTransactionDOLValues'.
   */
  public GermanInfo setMerchantTransactionDOLValues(java.lang.String merchantTransactionDOLValues) {
    return genClient.setOther(merchantTransactionDOLValues, CacheKey.merchantTransactionDOLValues);
  }

  /**
   * Sets the field 'merchantJournalDOL'.
   */
  public GermanInfo setMerchantJournalDOL(java.lang.String merchantJournalDOL) {
    return genClient.setOther(merchantJournalDOL, CacheKey.merchantJournalDOL);
  }

  /**
   * Sets the field 'merchantJournalDOLValues'.
   */
  public GermanInfo setMerchantJournalDOLValues(java.lang.String merchantJournalDOLValues) {
    return genClient.setOther(merchantJournalDOLValues, CacheKey.merchantJournalDOLValues);
  }

  /**
   * Sets the field 'configMerchantId'.
   */
  public GermanInfo setConfigMerchantId(java.lang.String configMerchantId) {
    return genClient.setOther(configMerchantId, CacheKey.configMerchantId);
  }

  /**
   * Sets the field 'configProductLabel'.
   */
  public GermanInfo setConfigProductLabel(java.lang.String configProductLabel) {
    return genClient.setOther(configProductLabel, CacheKey.configProductLabel);
  }

  /**
   * Sets the field 'hostResponseAidParBMP53'.
   */
  public GermanInfo setHostResponseAidParBMP53(java.lang.String hostResponseAidParBMP53) {
    return genClient.setOther(hostResponseAidParBMP53, CacheKey.hostResponseAidParBMP53);
  }

  /**
   * Sets the field 'hostResponsePrintDataBM60'.
   */
  public GermanInfo setHostResponsePrintDataBM60(java.lang.String hostResponsePrintDataBM60) {
    return genClient.setOther(hostResponsePrintDataBM60, CacheKey.hostResponsePrintDataBM60);
  }

  /**
   * Sets the field 'sepaElvReceiptFormat'.
   */
  public GermanInfo setSepaElvReceiptFormat(java.lang.String sepaElvReceiptFormat) {
    return genClient.setOther(sepaElvReceiptFormat, CacheKey.sepaElvReceiptFormat);
  }

  /**
   * Sets the field 'sepaElvExtAppLabel'.
   */
  public GermanInfo setSepaElvExtAppLabel(java.lang.String sepaElvExtAppLabel) {
    return genClient.setOther(sepaElvExtAppLabel, CacheKey.sepaElvExtAppLabel);
  }

  /**
   * Sets the field 'sepaElvPreNotification'.
   */
  public GermanInfo setSepaElvPreNotification(java.lang.String sepaElvPreNotification) {
    return genClient.setOther(sepaElvPreNotification, CacheKey.sepaElvPreNotification);
  }

  /**
   * Sets the field 'sepaElvMandate'.
   */
  public GermanInfo setSepaElvMandate(java.lang.String sepaElvMandate) {
    return genClient.setOther(sepaElvMandate, CacheKey.sepaElvMandate);
  }

  /**
   * Sets the field 'sepaElvCreditorId'.
   */
  public GermanInfo setSepaElvCreditorId(java.lang.String sepaElvCreditorId) {
    return genClient.setOther(sepaElvCreditorId, CacheKey.sepaElvCreditorId);
  }

  /**
   * Sets the field 'sepaElvMandateId'.
   */
  public GermanInfo setSepaElvMandateId(java.lang.String sepaElvMandateId) {
    return genClient.setOther(sepaElvMandateId, CacheKey.sepaElvMandateId);
  }

  /**
   * Sets the field 'sepaElvIban'.
   */
  public GermanInfo setSepaElvIban(java.lang.String sepaElvIban) {
    return genClient.setOther(sepaElvIban, CacheKey.sepaElvIban);
  }


  /** Clears the 'cardTrack2' field, the 'has' method for this field will now return false */
  public void clearCardTrack2() {
    genClient.clear(CacheKey.cardTrack2);
  }
  /** Clears the 'cardSequenceNumber' field, the 'has' method for this field will now return false */
  public void clearCardSequenceNumber() {
    genClient.clear(CacheKey.cardSequenceNumber);
  }
  /** Clears the 'transactionCaseGermany' field, the 'has' method for this field will now return false */
  public void clearTransactionCaseGermany() {
    genClient.clear(CacheKey.transactionCaseGermany);
  }
  /** Clears the 'transactionTypeGermany' field, the 'has' method for this field will now return false */
  public void clearTransactionTypeGermany() {
    genClient.clear(CacheKey.transactionTypeGermany);
  }
  /** Clears the 'terminalID' field, the 'has' method for this field will now return false */
  public void clearTerminalID() {
    genClient.clear(CacheKey.terminalID);
  }
  /** Clears the 'traceNumber' field, the 'has' method for this field will now return false */
  public void clearTraceNumber() {
    genClient.clear(CacheKey.traceNumber);
  }
  /** Clears the 'oldTraceNumber' field, the 'has' method for this field will now return false */
  public void clearOldTraceNumber() {
    genClient.clear(CacheKey.oldTraceNumber);
  }
  /** Clears the 'receiptNumber' field, the 'has' method for this field will now return false */
  public void clearReceiptNumber() {
    genClient.clear(CacheKey.receiptNumber);
  }
  /** Clears the 'transactionAID' field, the 'has' method for this field will now return false */
  public void clearTransactionAID() {
    genClient.clear(CacheKey.transactionAID);
  }
  /** Clears the 'transactionMSApp' field, the 'has' method for this field will now return false */
  public void clearTransactionMSApp() {
    genClient.clear(CacheKey.transactionMSApp);
  }
  /** Clears the 'transactionScriptResults' field, the 'has' method for this field will now return false */
  public void clearTransactionScriptResults() {
    genClient.clear(CacheKey.transactionScriptResults);
  }
  /** Clears the 'receiptType' field, the 'has' method for this field will now return false */
  public void clearReceiptType() {
    genClient.clear(CacheKey.receiptType);
  }
  /** Clears the 'customerTransactionDOLValues' field, the 'has' method for this field will now return false */
  public void clearCustomerTransactionDOLValues() {
    genClient.clear(CacheKey.customerTransactionDOLValues);
  }
  /** Clears the 'merchantTransactionDOLValues' field, the 'has' method for this field will now return false */
  public void clearMerchantTransactionDOLValues() {
    genClient.clear(CacheKey.merchantTransactionDOLValues);
  }
  /** Clears the 'merchantJournalDOL' field, the 'has' method for this field will now return false */
  public void clearMerchantJournalDOL() {
    genClient.clear(CacheKey.merchantJournalDOL);
  }
  /** Clears the 'merchantJournalDOLValues' field, the 'has' method for this field will now return false */
  public void clearMerchantJournalDOLValues() {
    genClient.clear(CacheKey.merchantJournalDOLValues);
  }
  /** Clears the 'configMerchantId' field, the 'has' method for this field will now return false */
  public void clearConfigMerchantId() {
    genClient.clear(CacheKey.configMerchantId);
  }
  /** Clears the 'configProductLabel' field, the 'has' method for this field will now return false */
  public void clearConfigProductLabel() {
    genClient.clear(CacheKey.configProductLabel);
  }
  /** Clears the 'hostResponseAidParBMP53' field, the 'has' method for this field will now return false */
  public void clearHostResponseAidParBMP53() {
    genClient.clear(CacheKey.hostResponseAidParBMP53);
  }
  /** Clears the 'hostResponsePrintDataBM60' field, the 'has' method for this field will now return false */
  public void clearHostResponsePrintDataBM60() {
    genClient.clear(CacheKey.hostResponsePrintDataBM60);
  }
  /** Clears the 'sepaElvReceiptFormat' field, the 'has' method for this field will now return false */
  public void clearSepaElvReceiptFormat() {
    genClient.clear(CacheKey.sepaElvReceiptFormat);
  }
  /** Clears the 'sepaElvExtAppLabel' field, the 'has' method for this field will now return false */
  public void clearSepaElvExtAppLabel() {
    genClient.clear(CacheKey.sepaElvExtAppLabel);
  }
  /** Clears the 'sepaElvPreNotification' field, the 'has' method for this field will now return false */
  public void clearSepaElvPreNotification() {
    genClient.clear(CacheKey.sepaElvPreNotification);
  }
  /** Clears the 'sepaElvMandate' field, the 'has' method for this field will now return false */
  public void clearSepaElvMandate() {
    genClient.clear(CacheKey.sepaElvMandate);
  }
  /** Clears the 'sepaElvCreditorId' field, the 'has' method for this field will now return false */
  public void clearSepaElvCreditorId() {
    genClient.clear(CacheKey.sepaElvCreditorId);
  }
  /** Clears the 'sepaElvMandateId' field, the 'has' method for this field will now return false */
  public void clearSepaElvMandateId() {
    genClient.clear(CacheKey.sepaElvMandateId);
  }
  /** Clears the 'sepaElvIban' field, the 'has' method for this field will now return false */
  public void clearSepaElvIban() {
    genClient.clear(CacheKey.sepaElvIban);
  }


  /**
   * Returns true if this instance has any changes.
   */
  public boolean containsChanges() {
    return genClient.containsChanges();
  }

  /**
   * Reset the log of changes made to this instance, calling copyChanges() after this would return an empty instance.
   */
  public void resetChangeLog() {
    genClient.resetChangeLog();
  }

  /**
   * Create a copy of this instance that contains only fields that were set after the constructor was called.
   */
  public GermanInfo copyChanges() {
    GermanInfo copy = new GermanInfo();
    copy.mergeChanges(this);
    copy.resetChangeLog();
    return copy;
  }

  /**
   * Copy all the changed fields from the given source to this instance.
   */
  public void mergeChanges(GermanInfo src) {
    if (src.genClient.getChangeLog() != null) {
      genClient.mergeChanges(new GermanInfo(src).getJSONObject(), src.genClient);
    }
  }

  public static final android.os.Parcelable.Creator<GermanInfo> CREATOR = new android.os.Parcelable.Creator<GermanInfo>() {
    @Override
    public GermanInfo createFromParcel(android.os.Parcel in) {
      GermanInfo instance = new GermanInfo(com.clover.sdk.v3.JsonParcelHelper.ObjectWrapper.CREATOR.createFromParcel(in).unwrap());
      instance.genClient.setBundle(in.readBundle(getClass().getClassLoader()));
      instance.genClient.setChangeLog(in.readBundle());
      return instance;
    }

    @Override
    public GermanInfo[] newArray(int size) {
      return new GermanInfo[size];
    }
  };

  public static final com.clover.sdk.JSONifiable.Creator<GermanInfo> JSON_CREATOR = new com.clover.sdk.JSONifiable.Creator<GermanInfo>() {
    public Class<GermanInfo> getCreatedClass() {
      return GermanInfo.class;
    }

    @Override
    public GermanInfo create(org.json.JSONObject jsonObject) {
      return new GermanInfo(jsonObject);
    }
  };

  public interface Constraints {
    public static final boolean CARDTRACK2_IS_REQUIRED = false;
    public static final boolean CARDSEQUENCENUMBER_IS_REQUIRED = false;
    public static final boolean TRANSACTIONCASEGERMANY_IS_REQUIRED = false;
    public static final boolean TRANSACTIONTYPEGERMANY_IS_REQUIRED = false;
    public static final boolean TERMINALID_IS_REQUIRED = false;
    public static final boolean TRACENUMBER_IS_REQUIRED = false;
    public static final boolean OLDTRACENUMBER_IS_REQUIRED = false;
    public static final boolean RECEIPTNUMBER_IS_REQUIRED = false;
    public static final boolean TRANSACTIONAID_IS_REQUIRED = false;
    public static final boolean TRANSACTIONMSAPP_IS_REQUIRED = false;
    public static final boolean TRANSACTIONSCRIPTRESULTS_IS_REQUIRED = false;
    public static final boolean RECEIPTTYPE_IS_REQUIRED = false;
    public static final boolean CUSTOMERTRANSACTIONDOLVALUES_IS_REQUIRED = false;
    public static final boolean MERCHANTTRANSACTIONDOLVALUES_IS_REQUIRED = false;
    public static final boolean MERCHANTJOURNALDOL_IS_REQUIRED = false;
    public static final boolean MERCHANTJOURNALDOLVALUES_IS_REQUIRED = false;
    public static final boolean CONFIGMERCHANTID_IS_REQUIRED = false;
    public static final boolean CONFIGPRODUCTLABEL_IS_REQUIRED = false;
    public static final boolean HOSTRESPONSEAIDPARBMP53_IS_REQUIRED = false;
    public static final boolean HOSTRESPONSEPRINTDATABM60_IS_REQUIRED = false;
    public static final boolean SEPAELVRECEIPTFORMAT_IS_REQUIRED = false;
    public static final boolean SEPAELVEXTAPPLABEL_IS_REQUIRED = false;
    public static final boolean SEPAELVPRENOTIFICATION_IS_REQUIRED = false;
    public static final boolean SEPAELVMANDATE_IS_REQUIRED = false;
    public static final boolean SEPAELVCREDITORID_IS_REQUIRED = false;
    public static final boolean SEPAELVMANDATEID_IS_REQUIRED = false;
    public static final boolean SEPAELVIBAN_IS_REQUIRED = false;
  }

}
